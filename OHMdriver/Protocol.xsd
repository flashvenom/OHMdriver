<?xml version="1.0" encoding="UTF-8"?>
<!--
*********************************************************************************
*  Copyright (c) 2011-2012,  Skyline Communications NV  All Rights Reserved.    *
*********************************************************************************
 
Reproduction of this document is authorized on condition that this
copyright notice is included.  This DataMiner Protocol Schema
embodies proprietary intellectual property.  The copyright
retains all title and ownership in the specification, including any
revisions. 

This specification is supplied "AS IS," and no
warranty, either express or implied, as to the use, operation,
condition, or performance of the specification, is made.

*********************************************************************************
Revision History:
DATE        VERSION   AUTHOR    COMMENTS
=================================================================================
14/01/2011  REV000    JSP       Initial version
02/05/2011  REV001    JSP       Params.Param.Length.Content.Param : 'sequence' instead of 'all'
                                Actions.Action.Type : startoffset/endoffset (casing changed)
01/06/2011  REV002    JSP       HyperLink & HyperLinks : capital L
05/12/2011  REV003    JSP       EnumProtocolType : new option 'snmpv3'
11/01/2012  REV004    JSP       Chains.Chain : new attributes 'topology' and 'options'
                                Topology (these tags should as from now be contained in a Topologies tag)  : new attribute 'name'
                                Topologies : new container for Topology tags
                                AlarmLevelLinks.AlarmLevelLink : new tags
                                SeverityBubbleUp.Path : new tags
                                Param.CRC.Type: attribute 'off' is now of type integer (instead of unsignedInt)
                                PortSettings : changes made to Type, PortTypeSerial, PortTypeIP, PortTypeUDP, IPport, LocalIPport
                                PortSettings : PortNumber tag has been removed
18/04/2012  REV005    JSP       HTTP tag
                                Groups.Group.Content.Session tag
                                EnumProtocolType : extra option "http"
                                TreeControls.TreeControl.ExtraDetails.LinkedDetails : maxOccurs="unbounded"
                                PortSettings.BusAddress : <xs:complexType><xs:sequence> instead of <xs:complexType><xs:all> & maxOccurs="unbounded"
04/07/2012  REV006    JSP       App tag
02/01/2013  REV007    JSP       QAction tag : attribute 'dllName' removed
                                Type tag : attribute 'overrideTimeoutDVE' added
                                HTTP.Session.Connection.Request : attribute 'pid' added
                                HTTP.Session.Connection.Request.Data : attribute 'pid' added
                                Params.Param.Length.Content.Param : minOccurs="0" maxOccurs="unbounded" 
                                Params.Param.ArrayOptions.ColumnOption : idx has to be unique
                                QAction, Command, Response, Pair, Group, Trigger, Action : ID is now unsignedInt instead of string
                                Icon tag
                                Params.Param : attribute 'historySet' added
                                ExportRules.ExportRule : attributes 'regex', 'whereTag' and 'whereValue' added
                                PortSettings.Stopbits : <xs:complexType><xs:sequence> instead of <xs:complexType><xs:all> & maxOccurs="unbounded"
                                EnumPortSettingsStopBits : value 1.5 added
*********************************************************************************
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.skyline.be/protocol" xmlns="http://www.skyline.be/protocol" xmlns:dis="http://www.skyline.be/protocol"
           elementFormDefault="qualified" attributeFormDefault="unqualified">
  <xs:element name="Protocol">
    <xs:annotation>
      <xs:documentation>
        <![CDATA[The root tag of the DataMiner Protocol file.]]>
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:all>
        <xs:element name="Actions" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[In this tag, specify all actions.<br />
              Actions are executed when a trigger goes off. Multiple actions can be linked to one trigger.]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Action" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    <![CDATA[In this tag, specify an action.<br />
                    Make sure that the id attribute contains a unique action ID.]]>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:all>
                    <xs:element name="Name" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this optional tag, you can specify the name of the action.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="On">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag, together with the Protocol.Actions.Action.Type tag, defines how the action is executed.<br />
                          Not all Protocol.Actions.Action.Type values can be used in combination with the different Protocol.Actions.Action.On types.
                          See the Protocol Reference Guide for an overview of the possible On/Type combinations.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="EnumActionOn">
                            <xs:attribute name="id" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[The ID of the Parameter, command, response, ...<br />
                                  If you don't specify an id attribute, the trigger will apply to all items of the type specified in the Protocol.Actions.Action.On tag.]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="nr" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Type">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag, together with the Protocol.Actions.Action.On tag, defines how the action is executed.<br />
                          Not all Protocol.Actions.Action.Type values can be used in combination with the different Protocol.Actions.Action.On types.
                          See the Protocol Reference Guide for an overview of the possible On/Type combinations.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="EnumActionType">
                            <xs:attribute name="allowed" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="arguments" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="endoffset" type="xs:unsignedInt">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="id" type="xs:unsignedInt">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="nr" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="options" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="returnValue" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="scale" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="script" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="sequence" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="startoffset" type="xs:unsignedInt">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="value" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:all>
                  <xs:attribute name="id" use="required" type="xs:unsignedInt">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[The (unique) action ID.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="template" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
          <xs:unique name="UniqueActionId">
            <xs:selector xpath="dis:Action"/>
            <xs:field xpath="@id"/>
          </xs:unique>
        </xs:element>
        <xs:element name="Advanced" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[In this tag, you can specify some advanced settings with regard to the Protocol's commands and responses.]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="ignoreEqualResponse" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[If you set this attribute to "true", then a received response will be disregarded if it is identical to the response received previously (for the same pair).<br />
                  In other words, the trigger associated with a response won't go off if that response is identical to the previous one.<br />
                  Use this option with extreme care, as it can have a profound impact on the general behaviour of the Protocol!]]>
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="stuffing" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[In this attribute, you can specify a number of settings with regard to stuffing. Separate them by semi-colons.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="AlarmLevelLinks" minOccurs="0">
              <xs:annotation>
                  <xs:documentation>
                      <![CDATA[*** No documentation available yet ***]]>
                  </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                  <xs:sequence>
                      <xs:element name="AlarmLevelLink" minOccurs="0" maxOccurs="unbounded">
                          <xs:annotation>
                              <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                              </xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                              <xs:attribute name="destination" type="xs:string">
                                  <xs:annotation>
                                      <xs:documentation>
                                          <![CDATA[*** No documentation available yet ***]]>
                                      </xs:documentation>
                                  </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="id" type="xs:unsignedInt">
                                  <xs:annotation>
                                      <xs:documentation>
                                          <![CDATA[The (unique) ID of the AlarmLevelLink.]]>
                                      </xs:documentation>
                                  </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="remoteElement" type="xs:string">
                                  <xs:annotation>
                                      <xs:documentation>
                                          <![CDATA[*** No documentation available yet ***]]>
                                      </xs:documentation>
                                  </xs:annotation>
                              </xs:attribute>
                          </xs:complexType>
                          <xs:unique name="UniqueAlarmLevelLink">
                              <xs:selector xpath="dis:AlarmLevelLink"/>
                              <xs:field xpath="@id"/>
                          </xs:unique>
                      </xs:element>
                  </xs:sequence>
              </xs:complexType>
        </xs:element>
        <xs:element name="App" minOccurs="0">
            <xs:annotation>
                <xs:documentation>
                    <![CDATA[Add this tag to the Protocol if you want to turn Elements using this Protocol into applications.<br />
                    In DataMiner Cube, applications based on Protocols can be found under Start &gt; Apps &gt; Applications.]]>
                </xs:documentation>
            </xs:annotation>
            <xs:complexType>
                <xs:attribute name="type" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            <![CDATA[In this attribute, specify the name of the application.<br />
                            In DataMiner Cube, this name will appear in the Applications list (Start &gt; Apps &gt; Applications).]]>
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:complexType>
        </xs:element>  
        <xs:element name="Chains" minOccurs="0" >
          <xs:annotation>
            <xs:documentation>
              <![CDATA[*** No documentation available yet ***]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Chain" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    <![CDATA[*** No documentation available yet ***]]>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Field" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[*** No documentation available yet ***]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:attribute name="displayTable" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="name" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="options" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="pid" type="TypeParamId">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="name" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="options" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                        </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="topology" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                        </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="filters" type="EnumChainsFilters">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="Commands" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag contains all commands of the Protocol.<br />
              Commands are sent from DataMiner to the device<br />
              - to request information from the device, or<br />
              - to change a setting of the device.]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Command" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    <![CDATA[This tag contains a complete command definition.<br />
                    DataMiner sends command to the device<br />
                    - to request information, or<br />
                    -	to change a setting.<br />
                    In both cases, DataMiner will expect a response from the device. If it requests information, it will obviously expect a response that contains that information,
                    and if it changes a setting, it will expect a confirmation (although, in some cases, none is returned).<br />
                    Make sure that the id attribute contains a unique command ID.]]>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:all>
                    <xs:element name="Content">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, specify the consecutive Parameters which, together, form the command to be sent to the device.<br />
                          Quite often, commands have a header Parameter and a trailer Parameter that easily identify the beginning and the end of the command.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Param" type="TypeParamId" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, specify the ID of the Parameter that you want to include in the command.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Description" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, you can enter some text that describes the command.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="Name" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, enter the name of the command.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                  </xs:all>
                  <xs:attribute name="id" use="required" type="xs:unsignedInt">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[The (unique) command ID.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
          <xs:unique name="UniqueCommandId">
            <xs:selector xpath="dis:Command"/>
            <xs:field xpath="@id"/>
          </xs:unique>
        </xs:element>
        <xs:element name="Description" type="xs:string">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag has to contain a description of the Protocol.<br />
              In this tag, you can specify some general information about the Protocol. You could, for example, use this tag to specify that the Protocol has been developed for Elements
              running a specific firmware version.<br />
              In Protocols of Elements that are used in Automation, the contents of this tag must be unique.]]>
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="DeviceOID" type="xs:string">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[In this tag, you can specify an OID for the device that will be managed with the Protocol.<br />
              The device OID has to be specified right after the vendor OID. Note that the complete OID, i.e. the vendor OID followed by the device OID, must be unique.
              This means that for each device from the same vendor you have to use a new device OID.]]>
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Display" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag allows the Protocol to define the layout and the order of the Data Display pages.]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:attribute name="defaultPage" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Defines the page that will be shown by default. Only one page name is allowed.<br />
                  If you don't specify a default page, the first page will be shown.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pageOptions" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="pageOrder" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Defines the order of the pages in the Element Display drop-down box.<br />
                  By default, the pages will be ordered alphabetically.<br />
                  In addition to the pages, you can add a reference to a web interface by specifying<br />
                  -	Webinterface#http://[PollingIP], or<br/>
                  -	WebInterface#http://[ID:DataMinerID]]]>
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="type" type="EnumDisplayType">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[See the tooltips of the different options.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="wideColumnPages" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Defines the pages that have only one column. Page names are separated by a semi-colon (";").<br />
                  By default, a page will have multiple columns. Use this attribute for pages that will contain e.g. a wide table.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="ElementType" minOccurs="0" type="xs:string">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag allows you to describe the type of device for which the Protocol will be used.<br />
              The Element type will be shown whenever an Element is added or edited. It will also be shown in the Details section of System Display when an Element is selected.]]>
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="ExportRules" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[*** No documentation available yet ***]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ExportRule" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    <![CDATA[*** No documentation available yet ***]]>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="attribute" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="name" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[In this tag, specify the name of the export rule.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="regex" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[In this attribute, you can specify a regular expression.]]>
                            </xs:documentation>
                        </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="table" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="tag" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="value" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="whereTag" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[In the whereTag and whereValue attributes, you can specify a condition. That way, the export rule will only be applied if the condition is met.</br>
                                Example: <ExportRule table="*" ... whereTag="Protocol/Params/Param/Name" whereValue="My param" />]]>
                            </xs:documentation>
                        </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="whereValue" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[In the whereTag and whereValue attributes, you can specify a condition. That way, the export rule will only be applied if the condition is met.</br>
                                Example: <ExportRule table="*" ... whereTag="Protocol/Params/Param/Name" whereValue="My param" />]]>
                            </xs:documentation>
                        </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Groups" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag contains all groups of the Protocol.]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Group" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    <![CDATA[Groups are used to do the actual device polling.<br />
                    In a group, you can assemble different Parameters, command/response pairs or actions. When a group is executed, all Parameters, pairs or actions included in the group
                    will be executed one after the other.<br />
                    Make sure that the id attribute contains a unique group ID.]]>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:all>
                    <xs:element name="Content" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, include all Parameters, pairs, or actions that have to be executed consecutively when the group is executed.<br />
                          Inside one Protocol.Groups.Group.Content tag, you are only allowed to specify tags of the same type:<br />
                          - Parameter tags only,<br />
                          - pair tags only,<br />
                          - action tags only, or<br />
                          - trigger tags only.<br />
                          Recommendation: Do not include more than 10 Parameters, pairs, actions or triggers in one Protocol.Groups.Group.Content tag.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Action" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, you can specify the ID of an action to be included in a group.<br />
                                If you include actions in a group, don't forget to add the following attribute to the Protocol.Groups.Group tag: type=action]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:unsignedInt">
                                  <xs:attribute name="next" type="xs:unsignedInt">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[In this attribute, you can specify the number of milliseconds DataMiner has to wait before executing the next action after having received
                                        the response of the last executed action.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Pair" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, you can specify the ID of a command/response pair to be included in a group.<br />
                                When a setting has to be changed, it is common practice to include in a group<br />
                                -	a "SET" pair, directly followed by<br />
                                - a "GET" pair.<br />
                                That way, the DataMiner web interface will immediately show the changed values.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:unsignedInt">
                                  <xs:attribute name="next" type="xs:unsignedInt">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[In this attribute, you can specify the number of milliseconds DataMiner has to wait before executing the next pair after having received
                                        the response of the last executed pair.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Param" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, you can specify the ID of a Parameter to be included in a group.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="TypeParamId">
                                  <xs:attribute name="next" type="xs:unsignedInt">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[In this attribute, you can specify the number of milliseconds DataMiner has to wait before reading the next Parameter.<br />
                                        Only applicable in case of single GETs.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Session" minOccurs="0" maxOccurs="unbounded" type="xs:unsignedInt">
                              <xs:annotation>
                                  <xs:documentation>
                                      <![CDATA[In this tag, you can specify the ID of an HTTP session to be included in a group.]]>
                                   </xs:documentation>
                               </xs:annotation>
                          </xs:element>  
                          <xs:element name="Trigger" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, you can specify the ID of a trigger to be included in a group.<br />
                                If you include triggers in a group, don't forget to add the following attribute to the Protocol.Groups.Group tag: type=trigger]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:unsignedInt">
                                  <xs:attribute name="next" type="xs:unsignedInt">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[In this attribute, you can specify the number of milliseconds DataMiner has to wait before executing the next trigger.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="multipleGet" type="EnumTrueFalse">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[If "true", all Parameters will be read in one Get operation.<br />
                              If one Parameter is wrong, none of the Parameters will receive data, which will result in "no such name" errors.<br />
                              This "multipleGet" option cannot be used with Parameters of Type "Array".]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Description" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, you can enter some text that describes the group.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="Name" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, specify the name of the group. This name could, for example, refer to the information that will be requested from the device.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="Type" minOccurs="0" type="EnumGroupType">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[By default, a group includes Parameters or pairs. However, if you want to include actions or triggers in a group, use this tag.<br />
                          If you specify "action" or "trigger", the group will be executed at once.
                          If, however, you specify "poll", "poll action" or "poll trigger", the group will be put on the stack, awaiting execution.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                  </xs:all>
                  <xs:attribute name="connection" default="0" type="xs:unsignedInt">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[In case of multiple ports, you can use this attribute to specify the port to be used.<br />
                        Default port: 0]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="id" use="required" type="xs:unsignedInt">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[The (unique) group ID.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="template" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="type" type="EnumGroupContentType">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
          <xs:unique name="UniqueGroupId">
            <xs:selector xpath="dis:Group"/>
            <xs:field xpath="@id"/>
          </xs:unique>
        </xs:element>
        <xs:element name="HTTP" minOccurs="0">
            <xs:annotation>
                <xs:documentation>
                    <![CDATA[This tag is the root of the HTTP-specific features in a Protocol.]]>
                </xs:documentation>
            </xs:annotation>
            <xs:complexType>
                <xs:sequence>
                    <xs:element name="Session" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[This tag represents a particular HTTP session.]]>
                            </xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="Connection" minOccurs="0" maxOccurs="unbounded">
                                    <xs:annotation>
                                        <xs:documentation>
                                            <![CDATA[In this tag, specify a connection. This typically consists of a request and a response.]]>
                                        </xs:documentation>
                                    </xs:annotation>
                                    <xs:complexType>
                                        <xs:all>
                                            <xs:element name="Request" minOccurs="1" maxOccurs="1">
                                                <xs:annotation>
                                                    <xs:documentation>
                                                        <![CDATA[In this tag, define the HTTP request to be sent.]]>
                                                    </xs:documentation>
                                                </xs:annotation>
                                                <xs:complexType>
                                                    <xs:all>
                                                        <xs:element name="Data" minOccurs="0" maxOccurs="1">
                                                            <xs:annotation>
                                                                <xs:documentation>
                                                                    <![CDATA[In this tag, you can specify a block of data to be sent.<BR />
                                                                    Alternatively, you can put this data in Parameters, which you should then specify in the Parameters tag.]]>
                                                                </xs:documentation>
                                                            </xs:annotation>
                                                            <xs:complexType>
                                                                <xs:simpleContent>
                                                                    <xs:extension base="xs:string">
                                                                        <xs:attribute name="pid" use="optional" type="xs:unsignedInt">
                                                                            <xs:annotation>
                                                                                <xs:documentation>
                                                                                    <![CDATA[*** No documentation available yet ***]]>
                                                                                </xs:documentation>
                                                                            </xs:annotation>
                                                                        </xs:attribute>
                                                                    </xs:extension>
                                                                </xs:simpleContent>
                                                            </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Parameters" minOccurs="0" maxOccurs="1">
                                                            <xs:annotation>
                                                                <xs:documentation>
                                                                    <![CDATA[If you don't want to specify a fixed block of data in the Data tag, but rather a number of Parameters containing the data to be sent, then use this tag to define the list of Parameters of which you want the contents to be sent in the HTTP request.]]>
                                                                </xs:documentation>
                                                            </xs:annotation>
                                                            <xs:complexType>
                                                                <xs:sequence>
                                                                    <xs:element name="Parameter" minOccurs="1" maxOccurs="unbounded">
                                                                        <xs:annotation>
                                                                            <xs:documentation>
                                                                                <![CDATA[In a Parameter tag, you can specify a Parameter of which you want the contents to be sent in the HTTP request.<BR />
                                                                                Via HTTP, this has to be done by means of key/value pairs.]]>
                                                                            </xs:documentation>
                                                                        </xs:annotation>
                                                                        <xs:complexType>
                                                                            <xs:simpleContent>
                                                                                <xs:extension base="xs:string">
                                                                                    <xs:attribute name="key" use="required" type="xs:string">
                                                                                        <xs:annotation>
                                                                                            <xs:documentation>
                                                                                                <![CDATA[In this attribute, specify the key of the key/value pair.]]>
                                                                                            </xs:documentation>
                                                                                        </xs:annotation>
                                                                                    </xs:attribute>
                                                                                    <xs:attribute name="pid" use="optional" type="xs:unsignedInt">
                                                                                        <xs:annotation>
                                                                                            <xs:documentation>
                                                                                                <![CDATA[In this attribute, specify the ID of the DataMiner Parameter that contains the value to be sent.<BR />
                                                                                                If you don't specify the pid attribute, then you have to provide a fixed value inside the Parameter tag.]]>
                                                                                            </xs:documentation>
                                                                                        </xs:annotation>
                                                                                    </xs:attribute>
                                                                                </xs:extension>
                                                                            </xs:simpleContent>
                                                                        </xs:complexType>
                                                                    </xs:element>
                                                                </xs:sequence>
                                                            </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Headers" minOccurs="0" maxOccurs="1">
                                                            <xs:annotation>
                                                                <xs:documentation>
                                                                    <![CDATA[In this tag, specify any additional headers that need to be sent along in the HTTP request.]]>
                                                                </xs:documentation>
                                                            </xs:annotation>
                                                            <xs:complexType>
                                                                <xs:sequence>
                                                                    <xs:element name="Header" minOccurs="1" maxOccurs="unbounded">
                                                                        <xs:annotation>
                                                                            <xs:documentation>
                                                                                <![CDATA[In a Header tag, you can specify a Parameter of which you want the contents to be put in one of the headers of the HTTP request.<BR />
                                                                                Via HTTP, this has to be done by means of key/value pairs.]]>
                                                                            </xs:documentation>
                                                                        </xs:annotation>
                                                                        <xs:complexType>
                                                                            <xs:simpleContent>
                                                                                <xs:extension base="xs:string">
                                                                                    <xs:attribute name="key" use="required" type="xs:string">
                                                                                        <xs:annotation>
                                                                                            <xs:documentation>
                                                                                                <![CDATA[In this attribute, specify the key of the key/value pair.]]>
                                                                                            </xs:documentation>
                                                                                        </xs:annotation>
                                                                                    </xs:attribute>
                                                                                    <xs:attribute name="pid" use="optional" type="xs:unsignedInt">
                                                                                        <xs:annotation>
                                                                                            <xs:documentation>
                                                                                                <![CDATA[In this attribute, specify the ID of the Parameter that contains the value to be put in the header.<BR />
                                                                                                If you don't specify the pid attribute, then you have to provide a fixed value inside the Header tag.]]>
                                                                                            </xs:documentation>
                                                                                        </xs:annotation>
                                                                                    </xs:attribute>
                                                                                </xs:extension>
                                                                            </xs:simpleContent>
                                                                        </xs:complexType>
                                                                    </xs:element>
                                                                </xs:sequence>
                                                            </xs:complexType>
                                                        </xs:element>
                                                    </xs:all>
                                                    <xs:attribute name="pid" use="optional" type="xs:unsignedInt">
                                                        <xs:annotation>
                                                            <xs:documentation>
                                                                <![CDATA[*** No documentation available yet ***]]>
                                                            </xs:documentation>
                                                        </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="verb" use="optional" type="EnumHttpRequestVerb">
                                                        <xs:annotation>
                                                            <xs:documentation>
                                                                <![CDATA[Set this attribute to "GET", "POST" or "PUT".<BR />
                                                                If you don't specify this attribute, "GET" will be used by default.]]>
                                                            </xs:documentation>
                                                        </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="url" use="optional" type="xs:string">
                                                        <xs:annotation>
                                                            <xs:documentation>
                                                                <![CDATA[In this attribute, specify the URL of the request.<BR />
                                                                If you don't specify this attribute, the root directory of the server specified in the Element wizard will be used.]]>
                                                            </xs:documentation>
                                                        </xs:annotation>
                                                    </xs:attribute>
                                                </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Response" minOccurs="1" maxOccurs="1">
                                                <xs:annotation>
                                                    <xs:documentation>
                                                        <![CDATA[In this tag, define the response to the HTTP request you defined in the Request tag.]]>
                                                    </xs:documentation>
                                                </xs:annotation>
                                                <xs:complexType>
                                                    <xs:all>
                                                        <xs:element name="Headers" minOccurs="0" maxOccurs="1">
                                                            <xs:annotation>
                                                                <xs:documentation>
                                                                    <![CDATA[In this attribute, specify the response headers of which you want to store the contents in a Parameter.]]>
                                                                </xs:documentation>
                                                            </xs:annotation>
                                                            <xs:complexType>
                                                                <xs:sequence>
                                                                    <xs:element name="Header" minOccurs="1" maxOccurs="unbounded">
                                                                        <xs:annotation>
                                                                            <xs:documentation>
                                                                                <![CDATA[In a Header tag, you can specify that the contents of a particular response header has to be stored in a Parameter.<BR />
                                                                                In this context, this has to be done by means of a key/value pair.]]>
                                                                            </xs:documentation>
                                                                        </xs:annotation>
                                                                        <xs:complexType>
                                                                            <xs:simpleContent>
                                                                                <xs:extension base="xs:string">
                                                                                    <xs:attribute name="key" use="required" type="xs:string">
                                                                                        <xs:annotation>
                                                                                            <xs:documentation>
                                                                                                <![CDATA[In this attribute, specify the name of the header of which you want the contents to be stored in the Parameter ID defined in the pid attribute.]]>
                                                                                            </xs:documentation>
                                                                                        </xs:annotation>
                                                                                    </xs:attribute>
                                                                                    <xs:attribute name="pid" use="optional" type="xs:unsignedInt">
                                                                                        <xs:annotation>
                                                                                            <xs:documentation>
                                                                                                <![CDATA[In this attribute, specify the ID of the Parameter in which you want to store the contents of the header defined in the key attribute.]]>
                                                                                            </xs:documentation>
                                                                                        </xs:annotation>
                                                                                    </xs:attribute>
                                                                                </xs:extension>
                                                                            </xs:simpleContent>
                                                                        </xs:complexType>
                                                                    </xs:element>
                                                                </xs:sequence>
                                                            </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Content" minOccurs="1" maxOccurs="1">
                                                            <xs:annotation>
                                                                <xs:documentation>
                                                                    <![CDATA[In the pid attribute of this tag, specify the ID of the Parameter in which you want the contents of the response to be stored.]]>
                                                                </xs:documentation>
                                                            </xs:annotation>
                                                            <xs:complexType>
                                                                <xs:simpleContent>
                                                                    <xs:extension base="xs:string">
                                                                        <xs:attribute name="pid" use="required" type="xs:unsignedInt">
                                                                            <xs:annotation>
                                                                                <xs:documentation>
                                                                                    <![CDATA[In this attribute, specify the ID of the Parameter in which you want the contents of the response to be stored.]]>
                                                                                </xs:documentation>
                                                                            </xs:annotation>
                                                                        </xs:attribute>
                                                                    </xs:extension>
                                                                </xs:simpleContent>
                                                            </xs:complexType>
                                                        </xs:element>
                                                    </xs:all>
                                                    <xs:attribute name="statusCode" use="optional" type="xs:unsignedInt">
                                                        <xs:annotation>
                                                            <xs:documentation>
                                                                <![CDATA[In this attribute, specify the ID of the Parameter in which the HTTP status code (e.g. 404, 501, ...) has to be stored.]]>
                                                            </xs:documentation>
                                                        </xs:annotation>
                                                    </xs:attribute>
                                                </xs:complexType>
                                             </xs:element>
                                        </xs:all>
                                        <xs:attribute name="id" use="required" type="xs:string">
                                            <xs:annotation>
                                                <xs:documentation>
                                                    <![CDATA[The (unique) connection ID.]]>
                                                </xs:documentation>
                                            </xs:annotation>
                                        </xs:attribute>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                            <xs:attribute name="id" use="required" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        <![CDATA[The (unique) session ID.]]>
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="loginMethod" use="optional" type="EnumHttpLoginMethod">
                                <xs:annotation>
                                    <xs:documentation>
                                        <![CDATA[Set this attribute to either "credentials" or "https", depending on which kind of authentication you would like to use.]]>
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="userName" use="optional" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        <![CDATA[If you set loginMethod to "credentials", then use this attribute to specify the user name.]]>
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="password" use="optional" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        <![CDATA[If you set loginMethod to "credentials", then use this attribute to specify the password.]]>
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="proxyServer" use="optional" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        <![CDATA[Use this attribute to specify the proxy server through which the connection has to be set up.<BR />
                                        Note: If you don't specify a proxy server, then an attempt will be made to fetch the default proxy configuration using the Web Proxy Autodiscovery Protocol.]]>
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="proxyUser" use="optional" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        <![CDATA[If, in the proxyServer attribute, you specified a proxy server that requires authentication, then use this attribute to specify the user name.]]>
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="proxyPassword" use="optional" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        <![CDATA[If, in the proxyServer attribute, you specified a proxy server that requires authentication, then use this attribute to specify the password.]]>
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:complexType>
                        <xs:unique name="UniqueConnectionId">
                            <xs:selector xpath="dis:Connection"/>
                            <xs:field xpath="@id"/>
                        </xs:unique>
                    </xs:element> 
                </xs:sequence>
            </xs:complexType>
            <xs:unique name="UniqueSessionId">
                <xs:selector xpath="dis:Session"/>
                <xs:field xpath="@id"/>
            </xs:unique>
        </xs:element>
        <xs:element name="Icon" minOccurs="0" type="Icon">
              <xs:annotation>
                  <xs:documentation>
                      <![CDATA[*** No documentation available yet ***]]>
                  </xs:documentation>
              </xs:annotation>
        </xs:element>
        <xs:element name="Name" type="xs:string">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag has to contain the name of the Protocol.<br />
              This name, which must be unique, will be used throughout the DataMiner system to identify the Protocol. Typically, it refers to an Element (e.g. brand name, device type, ...).]]>
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="NoTimeout" minOccurs="0" type="xs:string">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[Use this tag to indicate that a specific error should not cause timeouts to occur.<br />
              In a Protocol, this tag can be used more than once.]]>
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <!--
        ======================================================================================================================
        NEW <NOTIMEOUTS> TAG : XML Schema does not allow multiple occurrences of the <NoTimeout> tag inside the <Protocol> tag
        ======================================================================================================================
        <xs:element name="NoTimeouts" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[*** No documentation available yet ***]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NoTimeout" minOccurs="0" maxOccurs="unbounded" type="xs:string">
                <xs:annotation>
                  <xs:documentation>
                    <![CDATA[*** No documentation available yet ***]]>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        -->
        <xs:element name="Pairs" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag contains all pairs of the Protocol.]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Pair" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    <![CDATA[In this tag, you can associate an expected response to a command. Each command/response pair is uniquely identified by an ID.]]>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:all>
                    <xs:element name="Content">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, associate a command with its expected responses.<br />
                          You can specify only one command. The number of responses, however, can vary.<br />
                          - If no response is expected, then specify the command, but no response.<br />
                          - If only one single response is expected, then specify the command and the expected response.<br />
                          - If multiple responses are expected, then specify the command and all expected responses.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Command" type="xs:unsignedInt">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, specify the command that will be sent when the pair is executed.<br />
                                In a pair, you can specify only one command.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Response" minOccurs="0" maxOccurs="unbounded" type="xs:unsignedInt" default="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, specify the response(s) expected after the associated command has been sent.<br />
                                The number of responses to be defined in this tag can vary from none to several, depending on the device.<br />
                                When DataMiner receives a response from the device after having sent a command, it will try to match the response to one of the response defined in this tag.
                                If several responses have been defined, it will check them top down.<br />
                                If a match is found, DataMiner will move on to the next command/response pair.<br />
                                If no match is found, DataMiner will send the command again. In the device's Element Display, a red block will indicate that an error has occurred.
                                The log files of the device will contain more detailed information. If the new response still doesn't match one of the defined responses,
                                DataMiner will send the command for the third and last time. If, at that point, no valid response has been received, DataMiner will skip the command,
                                and move to the next command/response pair.<br />
                                By default, the number of retries in case of an invalid response is set to 3. This setting can be changed when adding or editing the device in System Display.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="ResponseOnBadCommand" minOccurs="0" maxOccurs="unbounded" type="xs:unsignedInt">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to define error messages from the device.<br />
                                If the device is able to return an error message, and if the structure of that error message is known, then you can create a response that matches that error message,
                                and included that response in the command/response pair as a "ResponseOnBadCommand".<br />
                                When the device sends a response that matches the ResponseOnBadCommand, then red blocks will be displayed on the communication indicator of the DataMiner web interface.
                                The command, however, won't be executed again as the received response matched one of the defined responses. Also, the information received from the device in the error message
                                could be used to inform users about the error that occurred.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Description" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, you can enter some text that describes the pair.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="Name" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, specify the name of the pair. This name is displayed in the stream when the pair is executed.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                  </xs:all>
                  <xs:attribute name="id" use="required" type="xs:unsignedInt">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[The unique ID of the command/response pair.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="options" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[Using this attribute, you can specify a number of options, separated by semi-colons (";").<br />
                        For an overview of all options that can be specified in this tag, see the Protocol Reference Guide.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="ping" type="EnumTrueFalse">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[If this attribute is set to "true", the pair will be executed when the device is in timeout and slow poll is activated.<br />
                        Note: This option cannot be used in Protocols of type SNMP or OPC.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="timeout" type="xs:unsignedInt">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[If you specify a timeout value in a Protocol.Pairs.Pair tag using this attribute, DataMiner will use this timeout value instead of the default one when executing the pair.<br />
                        Using this option, you can enlarge the period of time DataMiner will wait for a response after having sent a command.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
          <xs:unique name="UniquePairId">
            <xs:selector xpath="dis:Pair"/>
            <xs:field xpath="@id"/>
          </xs:unique>
        </xs:element>
        <xs:element name="Params" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag contains the definitions of all Parameters of the Protocol.]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Param" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    <![CDATA[This tag contains a complete Parameter definition.]]>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:all>
                    <xs:element name="Alarm" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag allows you to assign Alarms to a Parameter, and configure its settings. Each Alarm consists of two essential factors:<br />
                          -	Severity: Critical, Major, Minor, Warning or Normal<br />
                          -	Severity Range: Low, Medium or High<br />
                          These factors are combined into the following Alarm levels:<br />
                          -	Critical Low (CL)<br />
                          -	Major Low (MaL)<br />
                          -	Minor Low (MiL)<br />
                          -	Warning Low (WaL)<br />
                          -	Normal (Normal)<br />
                          -	Warning High (WaH)<br />
                          -	Minor High (MiH)<br />
                          -	Major High (MaH)<br />
                          -	Critical High (CH)<br />
                          Each Alarm level is included in the Protocol.Params.Param.Alarm tag, so a value can be assigned to it. If the Parameter is equal to or exceeds a value included in the
                          Protocol.Params.Param.Alarm tag, DataMiner will process an Alarm depending on the Alarm level that corresponds to the value.<br />
                          These assigned values are not only accessible via the Protocol, but also via System Display. The Alarm values of a Parameter can be altered by means of Alarm Templates,
                          on condition that a Protocol.Params.Param.Alarm tag has been assigned to the Parameter in the Protocol. The Alarm levels of a Parameter can be adapted at any moment,
                          regardless of the values included in the Protocol.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="CH" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[When the Parameter value equals or exceeds the value entered in this tag (Integer or String, depending on the type of the Parameter),
                                DataMiner will generate a new "critical high" Alarm.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="CL" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[When the Parameter value equals or exceeds the value entered in this tag (Integer or String, depending on the type of the Parameter),
                                DataMiner will generate a new "critical low" Alarm.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Info" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[When the value of the Alarm is equal to the value specified in this tag, an Information Event is generated.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="MaH" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[When the Parameter value equals or exceeds the value entered in this tag (Integer or String, depending on the type of the Parameter),
                                DataMiner will generate a new "major high" Alarm.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="MaL" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[When the Parameter value equals or exceeds the value entered in this tag (Integer or String, depending on the type of the Parameter),
                                DataMiner will generate a new "major low" Alarm.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="MiH" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[When the Parameter value equals or exceeds the value entered in this tag (Integer or String, depending on the type of the Parameter),
                                DataMiner will generate a new "minor high" Alarm.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="MiL" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[When the Parameter value equals or exceeds the value entered in this tag (Integer or String, depending on the type of the Parameter),
                                DataMiner will generate a new "minor low" Alarm.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Monitored" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to enable or disable the Protocol.Params.Param.Alarm tag assigned to the Parameter.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="EnumTrueFalse">
                                  <xs:attribute name="activeTime" type="xs:unsignedInt">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[If you specify a time span (in milliseconds) in this attribute, then the Alarm will automatically be cleared if the Parameter isn't set in the specified time span.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Normal" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[When the Parameter value equals this value (Integer or String, depending on the type of the Parameter) or doesn't exceed the specified warning limits,
                                DataMiner won't generate an Alarm. If an Alarm was generated earlier, its type will be set to "dropped".]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="WaH" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[When the Parameter value equals or exceeds the value entered in this tag (Integer or String, depending on the type of the Parameter),
                                DataMiner will generate a new "warning high" Alarm.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="WaL" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[When the Parameter value equals or exceeds the value entered in this tag (Integer or String, depending on the type of the Parameter),
                                DataMiner will generate a new "warning low" Alarm.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:all>
                        <xs:attribute name="activeTime" type="xs:unsignedInt">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[In case of a constant Alarm: the time (in milliseconds) before the Alarm is cleared.]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="lowHigh" type="EnumTrueFalse">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[By default, this attribute is set to<br />
                              -	"false" for a discreet, and<br />
                              -	"true" for any other type.<br />
                              Example: When you explicitly set this attribute to "false" for any type but a discreet, no range distinction will be made between e.g. "minor low" and "minor high".
                              Both will be shown as "minor".]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="options" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[In this attribute, you can specify the following options, separated by semi-colons (";"). These options can only be used if the table is linked to another table.<br />
                              -	threshold: When using this option, specify two Parameter IDs, separated by a comma. If the value of the second Parameter is smaller than the value of the first Parameter,
                              no Alarm will be generated.<br />
                              -	propertyNames: In this option, specify the Property labels to be added to the Alarm tab. Multiple names are separated by a comma.<br />
                              -	properties: In this option, specify the format of the Properties to be added to the Alarm tab. Always start the Properties string with the character used to separate the different formats.
                              Each Property in the string is either a Parameter ID or a combination of text and Parameter IDs separated by an asterisk ("*"). If the characters between * are numbers only,
                              then they are considered a Parameter ID.]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="type" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[When the polled device is able to send a nominal value for the Parameter, this attribute can be added to the Protocol.Params.Param.Alarm tag.<br />
                              - If set to "absolute", the Alarm values defined in the Protocol.Params.Param.Alarm tag will be calculated in accordance with the nominal value sent by the device.
                              When the "Critical Low" tag contains the value 5, this value will be subtracted from the nominal value to calculate the actual Alarm limit.<br />
                              -	If set to "relative", percentages will be taken instead of absolute values in order to calculate the actual Alarm limits. Example: When the "Minor High" tag contains 50,
                              the Alarm limit will contain the nominal value increased with 50% of its value.<br />
                              You can normalize an Alarm by (optionally) adding two Parameters, separated by a comma.<br />
                              -	First Parameter: The ID of the Parameter that holds the nominal value. This can be a dynamic table Parameter or a normal Parameter. In case of a dynamic table Parameter,
                              each row will be compared with the nominal value found in the same row of the specified column.<br />
                              -	Second Parameter: The ID of the Parameter that holds the value by which to multiply the nominal value.]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CRC" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[If Protocol.Params.Param.Type is "CRC", then this tag will allow you to define the CRC used in the communication with the device.
                          The information you specify in this tag will be used to calculate the CRC of the command/response.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="Content">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to specify the Parameters of the command/response to be included in the CRC calculation. In other words, the operation defined in the
                                Protocol.Params.Param.CRC.Type tag will only be performed on the Parameters defined in this Protocol.Params.Param.CRC.Content tag.<br />
                                Note: The first Parameter of the command/response has ID 0.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Param" minOccurs="0" maxOccurs="unbounded" type="TypeParamId">
                                  <xs:annotation>
                                    <xs:documentation>
                                      <![CDATA[In this tag, you can specify a Parameter of the command/response to be included in the CRC calculation.]]>
                                    </xs:documentation>
                                  </xs:annotation>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Type">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to define how the CRC actually has to be calculated.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="EnumParamCRCType">
                                  <xs:attribute name="byteoffset" type="xs:integer">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[This attribute allows you to add an offset to every single byte of the CRC.<br />
                                        Can be used in combination with all possible CRC types.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="groupbytes" type="xs:string">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[This attribute allows you to specify the number of bytes on which to perform the operation.<br />
                                        Only valid if the CRC type is set to one of the following values:	LSB after subtract, LSB after sum, Exor, Sum]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="mod" type="xs:unsignedInt">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[This attribute allows you to perform a modulo operation on the CRC after it has been calculated.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="off" type="xs:integer">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[This attribute allows you to add an offset value to the calculated CRC.<br />
                                        Only valid if the CRC type is set to one of the following values: LSB after subtract, LSB after sum, Rest, Subtract, Sum]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="options" type="xs:string">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[In this attribute, you can specify the following options, separated by semi-colons (";").<br />
                                        -	ones complement: each bit of the calculated CRC will be inverted. (Example: AAAA will become 5555)<br />
                                        -	or totaloffset: the "totaloffset" value will not be added but "OR"-ed.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="totaloffset" type="xs:unsignedInt">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[This attribute allows you to add an offset value to the CRC after it has been calculated.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:all>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Database" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[*** No documentation available yet ***]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="ColumnDefinition" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Partition" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="EnumDatabasePartition">
                                  <xs:attribute name="partitionsToKeep" type="xs:unsignedInt">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[*** No documentation available yet ***]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:all>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Dependencies" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag allows you to link one or more Parameters. This is mostly used for situations in which clicking a button executes a command that includes several Parameters.
                          Execution of such a command will only proceed if all dependent Parameters have a valid value.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Id" minOccurs="0" maxOccurs="unbounded" type="TypeParamId">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to specify the IDs of the Parameters that are linked to the Parameter you are defining.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Description" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this mandatory tag, you must specify the description of the Parameter. Typically, the Parameter name refers to the technical name of the Parameter,
                          while the Parameter description provides a more common name or description.<br />
                          Preferably, the value of this tag should be unique throughout the Protocol.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="Display" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag allows you to define if and how a Parameter will be displayed on the web interface.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="Decimals" minOccurs="0" type="xs:unsignedInt" default="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to define how many decimals should be used to display the Parameter on the web interface.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="ParametersView" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to display a Parameter as a chart.<br />
                                The Parameters holding the actual values to be displayed have to be specified in the Protocol.Params.Param.Display.ParametersView.Parameters tag.<br />
                                Note: If you use this tag, make sure to set Protocol.Params.Param.Measurement.Type to "Chart".]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:all>
                                <xs:element name="Parameters" minOccurs="0">
                                  <xs:annotation>
                                    <xs:documentation>
                                      <![CDATA[If you use the Protocol.Params.Param.Display.ParametersView tag to display a Parameter as a chart, then this tag has to contain the Parameters holding the actual values
                                      to be displayed.]]>
                                    </xs:documentation>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:sequence >
                                      <xs:element name="Parameter" minOccurs="0" maxOccurs="unbounded">
                                        <xs:annotation>
                                          <xs:documentation>
                                            <![CDATA[If you use the Protocol.Params.Param.Display.ParametersView tag to display a Parameter as a chart, then add a Parameter tag inside
                                            the Protocol.Params.Param.Display.ParametersView.Parameters tag for every Parameter holding a value to be displayed.<br />
                                            Note: Only specify Parameters of type "double".]]>
                                          </xs:documentation>
                                        </xs:annotation>
                                        <xs:complexType>
                                          <xs:attribute name="id" type="TypeParamId">
                                            <xs:annotation>
                                              <xs:documentation>
                                                <![CDATA[The ID of the Parameter.]]>
                                              </xs:documentation>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="options" type="xs:string">
                                            <xs:annotation>
                                              <xs:documentation>
                                                <![CDATA[*** Not yet implemented ***]]>
                                              </xs:documentation>
                                            </xs:annotation>
                                          </xs:attribute>
                                          <xs:attribute name="tableIndex" type="xs:string">
                                            <xs:annotation>
                                              <xs:documentation>
                                                <![CDATA[The row index (in case the id attribute refers to a table Parameter).<br />
                                                Wildcards are allowed. Example: sl*]]>
                                              </xs:documentation>
                                            </xs:annotation>
                                          </xs:attribute>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:all>
                              <xs:attribute name="options" type="xs:string">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[The pipe-separated list of options:<br />
                                    -	Height : Height of the chart (in pixels). If you don't specify a height, the chart will take up the rest of the page.]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="type" type="EnumParametersViewType">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[The type of chart: Column, Pie, Row, StackedArea<br />
                                    Note:<br />
                                    -	Pie charts only work if the referenced values are either all positive or all negative.<br />
                                    -	StackedArea charts should not be used to display values that are constantly changing.]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Positions" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to define the position of the Parameter on the web interface.<br />
                                Note: As a Parameter can be displayed on several locations on the web interface, the Protocol.Params.Param.Display.Positions tag can contain more than
                                one Protocol.Params.Param.Display.Positions.Position tags.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Position" minOccurs="0" maxOccurs="unbounded">
                                  <xs:annotation>
                                    <xs:documentation>
                                      <![CDATA[This tag defines the location of the Parameter on the web interface.]]>
                                    </xs:documentation>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:all>
                                      <xs:element name="Page" minOccurs="0">
                                        <xs:annotation>
                                          <xs:documentation>
                                            <![CDATA[This tag allows you to define on which Data Display page you want to display the Parameter.<br />
                                            All Data Display pages specified in the Protocol will appear in the page selection box at the top of the Data Display.]]>
                                          </xs:documentation>
                                        </xs:annotation>
                                        <xs:complexType>
                                          <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                              <xs:attribute name="measType" type="xs:string">
                                                <xs:annotation>
                                                  <xs:documentation>
                                                    <![CDATA[This attribute allows you to display a Parameter as a specific type of Parameter on a particular page.]]>
                                                  </xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:extension>
                                          </xs:simpleContent>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Column" minOccurs="0" type="xs:unsignedInt" default="0">
                                        <xs:annotation>
                                          <xs:documentation>
                                            <![CDATA[This tag allows you to define the horizontal position of the Parameter on the Data Display page specified in
                                            the Protocol.Params.Param.Display.Positions.Position.Page tag.<br />
                                            Data Display pages are divided into rows and columns. In the Protocol.Params.Param.Display.Positions.Position.Column tag, you can specify the column on which
                                            you want the Parameter to be displayed.<br />
                                            Enter an integer value between 0 and 5.<br />
                                            Note: It is recommended to divide the web interface into two columns: a left-hand column with column value 0, and a right-hand column with column value 1.]]>
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:element>
                                      <xs:element name="Row" minOccurs="0" type="xs:unsignedInt" default="0">
                                        <xs:annotation>
                                          <xs:documentation>
                                            <![CDATA[This tag allows you to define the vertical position of the Parameter on the Data Display page specified in
                                            the Protocol.Params.Param.Display.Positions.Position.Page tag.<br />
                                            Data Display pages are divided into rows and columns. In the Protocol.Params.Param.Display.Positions.Position.Row tag, you can specify the row on which you want
                                            the Parameter to be displayed.<br />
                                            Note: 0 = first row]]>
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:element>
                                    </xs:all>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Range" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to define the range of the Parameter.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:all minOccurs="0">
                                <xs:element name="High" type="xs:decimal" default="0">
                                  <xs:annotation>
                                    <xs:documentation>
                                      <![CDATA[This tag allows you to set the upper limit of the range, i.e. the maximum value of the Parameter.]]>
                                    </xs:documentation>
                                  </xs:annotation>
                                </xs:element>
                                <xs:element name="Low" type="xs:decimal" default="0">
                                  <xs:annotation>
                                    <xs:documentation>
                                      <![CDATA[This tag allows you to set the lower limit of the range, i.e. the minimum value of the Parameter.]]>
                                    </xs:documentation>
                                  </xs:annotation>
                                </xs:element>
                              </xs:all>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RTDisplay" minOccurs="0" type="EnumTrueFalse">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, you can determine whether or not a Parameter should be displayed on the web interface.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Steps" minOccurs="0" type="xs:decimal" default="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to define the step size of a write Parameter.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Units" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to link a unit to a Parameter displayed on the web interface. This can be a unit like "Vac", "dBm", ..., but it can also be a string like "batteries"
                                (for a Parameter showing the number of batteries attached to a backup power supply).<br />
                                The unit specified in this tag will be used each time the value of the Parameter is displayed: in a report, on the Alarm display, ...]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:all>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="HyperLinks" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, you can define custom commands (i.e. "hyperlinks") that have to appear on the shortcut menu when users right-click an Alarm of the Parameter in question.<br />
                          These custom commands are often hyperlinks pointing to a web page or an automation script.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="HyperLink" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, you can define a custom command (i.e. "hyperlink") that has to appear on the shortcut menu when users right-click an Alarm of the Parameter in question.<br />
                                For more information, see the Protocol Reference Guide.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="valueParsing" type="xs:string">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[Use this attribute if you want the command to appear only on the shortcut menu of specific Alarms and Information Events.<br />
                                        If you specify a string in this attribute, the command will only appear on the shortcut menu of Alarms and Information Events of which the value matches the string you specified.<br />
                                        If you leave this attribute empty, the command will appear on the shortcut menu of every Alarm and Information Event.<br />
                                        The string you specify in this valueParsing attribute can contain wildcards (question marks and asterisks) as well as placeholders. For examples, see the Protocol Reference Guide.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Icon" minOccurs="0" type="Icon">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                        </xs:annotation> 
                    </xs:element>
                    <xs:element name="Information" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this optional tag, you can specify more information about the Parameter.<br />
                          DataMiner will show this additional information in tooltips.<br />
                          Note: Only Parameters of type "read" or "read bit" will have a Protocol.Params.Param.Information tag. In some cases, however, also Parameters of type "write" or "write bit" will have one.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="Includes" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, you can specify one or more Protocol.Params.Param.Information.Include tags to indicate that you want additional information to be displayed in the tooltip.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Include" minOccurs="0" maxOccurs="unbounded" type="EnumParamInformationInclude" default="time">
                                  <xs:annotation>
                                    <xs:documentation>
                                      <![CDATA[In an Includes tag, you can specify one or more Protocol.Params.Param.Information.Include tags to indicate that you want additional information to be displayed in the tooltip.<br />
                                      Information specified in Protocol.Params.Param.Information.Include tags will appear underneath the contents of the Protocol.Params.Param.Information.Subtext tag.<br />
                                      An Include tag can contain one of the following values:<br />
                                      - Range: The range of the Parameter.<br />
                                      - Units: The units of the Parameter.<br />
                                      - Steps: The step size of the Parameter.<br />
                                      - Time: A time stamp that refers to either the last known change or the last time the Parameter was changed by its write Parameter (if any).]]>
                                    </xs:documentation>
                                  </xs:annotation>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Subtext" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, you can specify the actual content of the tooltip.<br />
                                Next to the title of the tooltip, a drop-down arrow will allow users to enlarge the tooltip and display the text contained in this Protocol.Params.Param.Information.Subtext tag.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Text" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, specify the title of the tooltip.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:all>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Interprete" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag allows you to specify how a Parameter value will be processed.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="Alignment" minOccurs="0" type="EnumParamInterpreteAlignment">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[Use this tag to retrieve BCD numbers from an incoming stream.<br />
                                When a Protocol.Params.Param.Interprete.Bits tag is defined in a group, only a couple of bits will be used from each byte.
                                When a read bit Parameter, with its rawtype set to "bcd", is assigned to that group and exists of multiple bytes, the alignment tag can be needed to specify the exact starting position
                                of the first BCD.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Base" minOccurs="0" type="xs:unsignedInt">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[Use this tag to specify the numeral system (decimal, hexadecimal, ...).<br />
                                Enter a number between 2 and 36. Default: 10<br />
                                Note: In case of base 36, the letters "a" through "z" (or "A" through "Z") are assigned the values 10 through 35.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Bits" minOccurs="0" type="xs:unsignedInt">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[Tags of this kind can be used when a group of multiple bytes has been defined, but only a couple of bits are used from each byte.<br />
                                Example: When only the lower 4 bits are used from each byte, a group can be defined with the Protocol.Params.Param.Interprete.Bits tag set to 4. When a "read bit" Parameter of 8 bits
                                is assigned to that group, 4 lower bits of 2 bytes will be taken instead of 1 complete byte.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="ByteOffset" minOccurs="0" type="xs:unsignedInt">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[Each incoming byte of a group containing this tag will be decremented with the specified byte offset, while each outgoing byte of the group will be incremented
                                with the specified byte offset.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Decimals" minOccurs="0" type="xs:unsignedInt">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[If the Parameter is a decimal number, then use this tag to specify the number of decimals.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Endian" minOccurs="0" type="EnumParamInterpreteEndian">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[When numbers are composed of multiple bytes, Intel processors inverse those bytes before writing them to memory. This optional tag instructs DataMiner to either inverse
                                the bytes or not (only relevant in case of unsigned numbers).<br />
                                - big: The bytes will be inversed.<br />
                                - little: The bytes will not be inversed.<br />
                                Note: If the Protocol.Params.Param.Interprete.Endian tag isn't used, the default Endian setting is "little".]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Exceptions" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In the Protocol.Params.Param.Interprete.Others tag, you can define symbols that are not accepted by the rawtype. However, a rare condition of a Parameter can also be expressed
                                by a symbol that is allowed by the Parameter's rawtype. In that case, you can use Protocol.Params.Param.Interprete.Exceptions.Exception tags.<br />
                                In the Protocol.Params.Param.Interprete.Exceptions tag, you can specify several Protocol.Params.Param.Interprete.Exceptions.Exception tags, each representing a different exceptional state.<br />
                                Note: Exception tags are only useful for Parameters of type "read".]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Exception" minOccurs="0" maxOccurs="unbounded">
                                  <xs:annotation>
                                    <xs:documentation>
                                      <![CDATA[Each exception is uniquely identified by its ID. If the Parameter receives an incoming symbol that matches the value specified in the
                                      Protocol.Params.Param.Interprete.Exceptions.Exception tag, the contents of the Protocol.Params.Param.Interprete.Exceptions.Exception.Display tag will be shown.]]>
                                    </xs:documentation>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:all>
                                      <xs:element name="Display">
                                        <xs:annotation>
                                          <xs:documentation>
                                            <![CDATA[When the incoming value matches the value of the exception, the contents of this Protocol.Params.Param.Interprete.Exceptions.Exception.Display tag will be displayed.]]>
                                          </xs:documentation>
                                        </xs:annotation>
                                        <xs:complexType>
                                          <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                              <xs:attribute name="state" type="EnumDisplayState">
                                                <xs:annotation>
                                                  <xs:documentation>
                                                    <![CDATA[To emphasize the rare condition of the Parameter, you can set the state attribute to "disabled" to have the Parameter displayed in gray.]]>
                                                  </xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:extension>
                                          </xs:simpleContent>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Value" type="xs:string">
                                        <xs:annotation>
                                          <xs:documentation>
                                            <![CDATA[This tag allows you to add a numeric value to the Parameter, which can be useful in case you want to show an Alarm when this rare condition occurs.]]>
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:element>
                                    </xs:all>
                                    <xs:attribute name="id" type="xs:unsignedInt">
                                      <xs:annotation>
                                        <xs:documentation>
                                          <![CDATA[The (unique) ID of the exception.]]>
                                        </xs:documentation>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="value" type="xs:string">
                                      <xs:annotation>
                                        <xs:documentation>
                                          <![CDATA[When the Parameter receives an incoming symbol that matches the contents of this tag, the contents of the
                                          Protocol.Params.Param.Interprete.Exceptions.Exception.Display tag will be displayed.]]>
                                        </xs:documentation>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                            <xs:unique name="UniqueException">
                              <xs:selector xpath="dis:Exception"/>
                              <xs:field xpath="@id"/>
                            </xs:unique>
                          </xs:element>
                          <xs:element name="Factor" minOccurs="0" type="xs:decimal">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Length" minOccurs="0" type="xs:unsignedInt">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[If you set Protocol.Params.Param.Interprete.LengthType to "fixed", then use this tag to specify the exact length of the Parameter (in bytes).]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="LengthType" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to specify whether or not the Parameter has a fixed length.<br />
                                For more information, see the Protocol Reference Guide.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="EnumParamInterpreteLengthType">
                                  <xs:attribute name="id" type="TypeParamId">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[If LengthType is "other param", then this attribute has to contain the ID of the "other" Parameter that contains the Parameter length.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="times" type="xs:unsignedInt">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[If LengthType is "next param", then this attribute has to contain the number of times the next Parameter should occur before it is considered to be the next Parameter.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="NbrOfBits" minOccurs="0" type="xs:unsignedInt">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to select the exact number of bits needed. When this number exceeds the number of bits used in a byte,
                                the Protocol.Params.Param.Interprete.Endian tag can be set to "big" to make DataMiner inverse the bits when processing them.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="OffSet" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:unsignedInt">
                                  <xs:attribute name="id" type="TypeParamId">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[*** No documentation available yet ***]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Others" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[Each Parameter has a certain rawtype, but in some cases other characters are sent instead of the usual ones to indicate a rare condition.
                                These symbols are often not allowed by the rawtype of the Parameter. To catch those characters and display the singular state of the Parameter, they can be specified in the
                                Protocol.Params.Param.Interprete.Others tag.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Other" minOccurs="0" maxOccurs="unbounded">
                                  <xs:annotation>
                                    <xs:documentation>
                                      <![CDATA[When an incoming character doesn't match the rawtype of a Parameter, DataMiner will try to match the symbol to the rawtype of the Parameter to which
                                      a Protocol.Params.Param.Interprete.Others.Other tag refers to, if any.]]>
                                    </xs:documentation>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:all>
                                      <xs:element name="Display">
                                        <xs:annotation>
                                          <xs:documentation>
                                            <![CDATA[When the Protocol.Params.Param.Interprete.Others.Other tag matches the incoming symbol, the contents of the Protocol.Params.Param.Interprete.Others.Other.Display tag
                                            will be shown.]]>
                                          </xs:documentation>
                                        </xs:annotation>
                                        <xs:complexType>
                                          <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                              <xs:attribute name="state" type="EnumDisplayState">
                                                <xs:annotation>
                                                  <xs:documentation>
                                                    <![CDATA[If set to "disabled", the Parameter will be displayed in gray.]]>
                                                  </xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:extension>
                                          </xs:simpleContent>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Value" type="xs:integer">
                                        <xs:annotation>
                                          <xs:documentation>
                                            <![CDATA[This tag allows you to add a numeric value (>= 10) to the Parameter, which can be useful in case you want to show an Alarm when this rare condition occurs.]]>
                                          </xs:documentation>
                                        </xs:annotation>
                                      </xs:element>
                                    </xs:all>
                                    <xs:attribute name="id" type="TypeParamId">
                                      <xs:annotation>
                                        <xs:documentation>
                                          <![CDATA[The ID of the Parameter to which the incoming symbol will be compared.<br />
                                          If the incoming symbol matches the referred Parameter, the contents of the Protocol.Params.Param.Interprete.Others.Other.Display tag will be shown.]]>
                                        </xs:documentation>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Range" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to define a range for a Parameter. By adding a range to the Protocol.Params.Param.Interprete tag, a value outside this defined range will be ignored.
                                The limits of the range are defined by the Protocol.Params.Param.Interprete.Range.Low and Protocol.Params.Param.Interprete.Range.High tags.<br />
                                Note: This tag can also be used to specify a value range in case of a simulated Element.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:all>
                                <xs:element name="High" type="xs:integer">
                                  <xs:annotation>
                                    <xs:documentation>
                                      <![CDATA[This tag allows you to set the upper limit of the range, i.e. the maximum value of a Parameter.]]>
                                    </xs:documentation>
                                  </xs:annotation>
                                </xs:element>
                                <xs:element name="Low" type="xs:integer">
                                  <xs:annotation>
                                    <xs:documentation>
                                      <![CDATA[This tag allows you to set the lower limit of the range, i.e. the minimum value of a Parameter.]]>
                                    </xs:documentation>
                                  </xs:annotation>
                                </xs:element>
                              </xs:all>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RawType" minOccurs="0" type="EnumParamInterpreteRawType">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to specify which type of content is allowed in the Parameter.<br />
                                If an incoming Parameter value doesn't match the expected rawtype, DataMiner won't process it. The rawtype setting can therefore be considered as a kind of filter.<br />
                                For more information, see the Protocol Reference Guide.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Scale" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to specify that you want DataMiner to re-interpret the value range of a particular Parameter.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="lowData" type="xs:integer">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[The lowest value that can be returned by the device for the Parameter in question.]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="highData" type="xs:integer">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[The highest value that can be returned by the device for the Parameter in question.]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="low" type="xs:integer">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[The value to which DataMiner has to convert the lowest value that can be returned by the device.]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="high" type="xs:integer">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[The value to which DataMiner has to convert the highest value that can be returned by the device.]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Sequence" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to perform a mathematical operation on a Parameter.<br />
                                Specify at least one mathematical operation. If you specify multiple operations, separate them using semi-colons (";").<br />
                                For more information, see the Protocol Reference Guide.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="noset" type="EnumTrueFalse">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[If you don't specify this attribute, or if you set it to "false", sequences will be taken into account when the Parameter gets a new value.<br />
                                        For examples, see the Protocol Reference Guide.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="loop" type="xs:unsignedInt">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[The loop value for the sequence (integer).<br />
                                        The value in the Parameter will be automatically recalculated taking into account the loop (overflow) sequence.<br />
                                        For examples, see the Protocol Reference Guide.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="StartPosition" minOccurs="0" type="xs:unsignedInt">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you, in case the Parameter is of type "read/write bits", to select the start bit in the group to which the Parameter refers to.
                                The most significant bit of the group is considered to be Bit 0, and the counter is incremented as the significance of the bits decreases.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Type" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, you can specify how the Parameter should be processed and saved.<br />
                                Enter one of the following values:<br />
                                - string: The Parameter will be processed as an ASCII string.<br />
                                - double: The Parameter will be processed as a number.<br />
                                - high nibble: The Parameter will be processed as the high nibble (i.e. first four bits) of a byte.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="EnumParamInterpreteType">
                                  <xs:attribute name="trim" type="xs:string">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[Add this attribute to remove leading and/or trailing spaces.<br />
                                        You can specify the following values. If you add both values, separate them by a semi-colon (";").<br />
                                        -	left: all leading spaces will be removed<br />
                                        -	right: all trailing spaces will be removed.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="filter" type="EnumTrueFalse">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[If you set this attribute to "true", then only printable characters will be displayed.<br />
                                        Default: false]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Value" minOccurs="0" type="xs:string">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In case of a Parameter with a fixed length and a fixed value, set the Protocol.Params.Param.Interprete.LengthType tag to "fixed" and
                                use this Value tag to specify the fixed value.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:all>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Length" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag allows you to define the length of the command/response.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="Content">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to specify the Parameter of the command/response that defines the length of the command/response.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Param" minOccurs="0" maxOccurs="unbounded" type="TypeParamId">
                                  <xs:annotation>
                                    <xs:documentation>
                                      <![CDATA[In this tag, specify the ID of the Parameter that contains the length of the command/response.<br />
                                      Note: The first Parameter of the command/response has ID 0.]]>
                                    </xs:documentation>
                                  </xs:annotation>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:all>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Measurement" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag allows you to specify how the Parameter has to be displayed on the web interface (depending on the Parameter type).]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="Discreets" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag has to contain the displayed value(s) of the Parameter.<br />
                                For every value, page button or button to be displayed, a separate Protocol.Params.Param.Measurement.Discreets.Discreet tag has to be specified.
                                In Data Display, the values will be displayed in the order in which they are specified in the Protocol.Params.Param.Measurement.Discreets tag.<br />
                                Note: The Protocol.Params.Param.Measurement.Discreets tag only has to be used if Protocol.Params.Param.Measurement.Type is set to "discreet", "pagebutton", or "togglebutton".]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Discreet" minOccurs="0" maxOccurs="unbounded">
                                  <xs:annotation>
                                    <xs:documentation>
                                      <![CDATA[A Protocol.Params.Param.Measurement.Discreets.Discreet tag contains a value and a text string.<br />
                                      The latter will be displayed on the web interface if the former matches the value of the Parameter.]]>
                                    </xs:documentation>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:all>
                                      <xs:element name="Display">
                                        <xs:annotation>
                                          <xs:documentation>
                                            <![CDATA[In this tag, specify the string to be displayed when the value of the Parameter matches the contents of the Protocol.Params.Param.Measurement.Discreets.Discreet.Value tag.]]>
                                          </xs:documentation>
                                        </xs:annotation>
                                        <xs:complexType>
                                          <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                              <xs:attribute name="state" type="xs:string">
                                                <xs:annotation>
                                                  <xs:documentation>
                                                    <![CDATA[*** No documentation available yet ***]]>
                                                  </xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:extension>
                                          </xs:simpleContent>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Value">
                                        <xs:annotation>
                                          <xs:documentation>
                                            <![CDATA[In this tag, you have to define when the discreet value has to be displayed. If the value of the Parameter matches the value in this tag,
                                            the contents of the Protocol.Params.Param.Measurement.Discreets.Discreet.Display tag will be displayed.]]>
                                          </xs:documentation>
                                        </xs:annotation>
                                        <xs:complexType>
                                          <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                              <xs:attribute name="location" type="xs:string">
                                                <xs:annotation>
                                                  <xs:documentation>
                                                    <![CDATA[If type is "dll", the location of the DLL file.]]>
                                                  </xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="type" type="EnumDiscreetValue">
                                                <xs:annotation>
                                                  <xs:documentation>
                                                    <![CDATA[*** No documentation available yet ***]]>
                                                  </xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:extension>
                                          </xs:simpleContent>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:all>
                                    <xs:attribute name="dependencyValues" type="xs:string">
                                      <xs:annotation>
                                        <xs:documentation>
                                          <![CDATA[When the Parameter depends on the current value of another Parameter, the dependencyValues attribute can be used to specify whether or not the discreet value
                                          should be available. If the other Parameter has one of the values specified in the attribute, the discreet will be displayed, otherwise it won't.]]>
                                        </xs:documentation>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="iconRef" type="EnumIcons">
                                      <xs:annotation>
                                        <xs:documentation>
                                          <![CDATA[*** No documentation available yet ***]]>
                                        </xs:documentation>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="options" type="xs:string">
                                      <xs:annotation>
                                        <xs:documentation>
                                          <![CDATA[*** No documentation available yet ***]]>
                                        </xs:documentation>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="dependencyId" type="TypeParamId">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[If the discreet values of the Parameter depend on the current state of another Parameter, the id of that other Parameter can be entered as an attribute.]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Threshold" minOccurs="0" type="xs:double">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag only has to be specified if Protocol.Params.Param.Measurement.Type is set to "threshold digital".<br />
                                In some cases, when only two states are allowed (e.g. ON and OFF) but the Parameter value lies within a range of values, a turnover point has to be defined to determined as of which value
                                ON is changed to OFF and vice versa. This turnover point can be defined using this Threshold tag. The actual on and off values are defined as discreets.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Type">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to specify how the Parameter has to be displayed on the web interface.<br />
                                For more information about the values that can be specified in this tag, see the Protocol Reference Guide.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="EnumParamMeasurementType">
                                  <xs:attribute name="case" type="EnumParamMeasurementTypeCase">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[Only to be specified in case of measurement type "string":<br />
                                        -	upper: upper case<br />
                                        -	lower: lower case]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="continuous" type="EnumOnOff">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[Only to be specified in case of measurement type "string":<br />
                                        -	ON<br />
                                        -	OFF]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="hex" type="EnumTrueFalse">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[If set to "true", the Parameter value will be displayed as a hexadecimal number.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="lines" type="xs:unsignedInt">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[Only to be specified in case of measurement type "string": the number of lines that will be displayed.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="link" type="xs:string">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[Only to be specified in case of measurement type "matrix": the file name in which the input and output labels are stored.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="number" type="xs:string">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[*** No documentation available yet ***]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="options" type="xs:string">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[The options that can be specified in this attribute depend on the measurement type specified in the Type tag.<br />
                                        In the Protocol Reference Guide, you will find which options can be specified for which measurement type.<br />
                                        If you specify multiple options, separate them by semi-colons (";").]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="width" type="xs:unsignedInt">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[Only to be specified in case of measurement types "pagebutton" or "button": the width of a (page)button.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:all>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Message" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag can be used to display some comment when users change the Parameter on the web interface. Usually, this text will appear as a pop-up warning when a potentially dangerous
                          setting has to be changed.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="Name" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this mandatory tag, you must specify the name of the Parameter. Typically, the Parameter name refers to the technical name of the Parameter, while the Parameter description
                          provides a more common name or description.<br />
                          Although it is possible that the value of this tag is used in Alarm notifications, typically the Parameter description will be used. See the Protocol.Params.Param.Description tag.<br />
                          Important:<br />
                          -	The value of this tag must be unique throughout the Protocol.<br />
                          -	It is not allowed to use the characters "-" and ":" in a Parameter name. If you do so, you won't be able to change the value of that Parameter in an Automation script.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="SNMP" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag is only used in Protocols for Elements that are SNMP compliant.<br />
                          In case of such an Element, DataMiner will interrogate the SNMP Agent specified in the Protocol.Params.Param.SNMP.OID tag or capture traps defined in the Protocol.Params.Param.SNMP.TrapOID tag.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="Enabled" minOccurs="0" type="EnumTrueFalse">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, you can specify whether or not DataMiner is allowed to interrogate the SNMP Agent.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="Factor" minOccurs="0" type="xs:unsignedInt" default="1">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[By default, SNMP does not support decimal values. In a DataMiner Protocol, however, you can use this Factor tag to produce decimal values.
                                If you specify a factor in this tag, all values will be divided by that factor.<br />
                                Default factor: 1]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                          <xs:element name="OID" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, specify the OID of the element.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="id" type="TypeParamId">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[The OID (or a part of it) can be made variable. To do so, replace the variable part of the OID by an asterisk ("*"), and specify the ID of the Parameter holding (part of)
                                        the OID in the id attribute.<br />
                                        For examples, see the Protocol Reference Guide.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="ipid" type="TypeParamId">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[If, for the SNMP Parameter, polling has to be performed on an alternative IP address, then, in the ipid attribute, specify the ID of the Parameter holding
                                        the alternative IP address.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="options" type="xs:string">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[In this attribute, you can specify the following options (separated by semi-colons):<br />
                                        -	instance<br />
                                        -	bulk<br />
                                        -	column<br />
                                        -	subtable<br />
                                        For more information about those options, see the Protocol Reference Guide.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="type" type="EnumOIDType">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[If you set this attribute to "complete", you indicate that the specified OID is a complete OID number.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="TrapMappings" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[Use this section if the mapAlarm attribute of the Protocol.Params.Param.SNMP.TrapOID tag is too limited. If you want to make more advanced Alarm mappings, add one or more
                                Protocol.Params.Param.SNMP.TrapMappings.TrapMapping elements to this Protocol.Params.Param.SNMP.TrapMappings tag.<br />
                                Note that it is actually possible to combine the Protocol.Params.Param.SNMP.TrapMappings tag with the mapAlarm attribute of the Protocol.Params.Param.SNMP.TrapOID tag.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="TrapMapping" minOccurs="0" maxOccurs="unbounded">
                                  <xs:annotation>
                                    <xs:documentation>
                                      <![CDATA[When a trap is received, all Protocol.Params.Param.SNMP.TrapMappings.TrapMapping tags will be checked top down. When a tag matches the incoming trap, the severity
                                      and/or the value specified in that mapping will be kept in memory. As soon as both the severity and the value are known, the search will stop and the Alarm will be generated.<br />
                                      At the end of the list of Protocol.Params.Param.SNMP.TrapMappings.TrapMapping tags, you can add such a tag in which you specify a wildcard. In the event that severity or value still
                                      can't be determined, the method with the mapAlarm attribute on the Protocol.Params.Param.SNMP.TrapOID tag will be executed in order to try to determine the severity and value.]]>
                                    </xs:documentation>
                                  </xs:annotation>
                                  <xs:complexType>
                                    <xs:attribute name="bindingMatch" type="xs:string">
                                      <xs:annotation>
                                        <xs:documentation>
                                          <![CDATA[This attribute consists of two parts, separated by a colon:<br />
                                          -	The number of the binding, and<br />
                                          -	A pipe-separated enumeration of values you want to compare to the value of the binding.<br />
                                          Note: Wildcards are allowed.]]>
                                        </xs:documentation>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="severity" type="xs:string">
                                      <xs:annotation>
                                        <xs:documentation>
                                          <![CDATA[This attribute contains one of the DataMiner severity levels.<br />
                                          Instead, you can also specify "NoAlarm" (or "NoTrap") to indicate that no Alarm should be generated.<br />
                                          Note: The severity level information will always overwrite previously assigned severity levels.]]>
                                        </xs:documentation>
                                      </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="value" type="xs:string">
                                      <xs:annotation>
                                        <xs:documentation>
                                          <![CDATA[This attribute contains an Alarm value, specified in the same way as the Alarm value in the mapAlarm attribute of the Protocol.Params.Param.SNMP.TrapOID tag.]]>
                                        </xs:documentation>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="TrapOID" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to specify the SNMP traps DataMiner has to capture with the Parameter in question.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="checkBindings" type="xs:string">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[This attribute does some basic filtering on the bindings. You can compare a certain binding to a fixed string (which optionally contains wildcards), or you can compare
                                        it to the value of another Parameter.<br />
                                        Checks must be separated by pipe characters.<br />
                                        For examples, see the Protocol Reference Guide.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="ipid" type="xs:string">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[By default, only the traps received from the polling IP address of an Element will be captured. However, using the ipid attribute, you can point to a Parameter that
                                        contains another IP address.<br />
                                        If you use the ipid attribute, only traps received from the IP address found in the Parameter referenced by the ipid attribute will be captured. Traps originating from the
                                        polling IP address will be disregarded.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="mapAlarm" type="xs:string">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[This attribute allows an Alarm to be created when a trap is received.<br />
                                        -	The first part must be "true" or "false", to enable or disable the mapping of Alarms.<br />
                                        -	The order of the following items (separated by pipe characters) is irrelevant: Severity, Value, Link, IgnoreSingleClear<br />
                                        For more information, see the Protocol Reference Guide.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="setBindings" type="xs:string">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[Use this attribute to take the value of a certain binding and immediately set (copy) it to another Parameter.<br />
                                        Set pairs have to be separated by semi-colons. Every set pair consists of a binding position (1-based) containing the value to be set and the ID of the Parameter to set,
                                        separated by a comma. If you want to set a dynamic table Parameter, you can add more items to the set pair (which will then be concatenated with a "." to build an index).<br />
                                        For examples, see the Protocol Reference Guide.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="type" type="EnumOIDType">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[If you set this attribute to "complete", then the complete OID of the trap must be specified.<br />
                                        If you set this attribute to "wildcard", then you can use an asterisk ("*") in the OID in order to capture a whole series of traps.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Type" minOccurs="0" type="EnumSNMPType">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[Use this tag to specify a special SNMP Parameter.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:all>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Type">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, specify the type of the Parameter.<br />
                          For more information about the different types, see the Protocol Reference Guide.<br />
                          Parameters of type "elementid", "elementname", "elementdmaid" and "dataminer info" are the first Parameters that are loaded by a Protocol. Although they hold information, they cannot, as such,
                          be displayed in Element Display. Therefore, for these types of Parameters, always set the Protocol.Params.Param.Display.RTDisplay tag to "false".<br />
                          If you do want to display the information in one of these Parameters in Element Display, there is a workaround: create another Parameter of type "read", and copy the value from its
                          invisible Parameter to this new Parameter after Protocol start-up. You can then display the "read" Parameter in Element Display.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="EnumParamType">
                            <xs:attribute name="alarmRegistration" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="distribution" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[This attribute is used in situations in which Elements of a certain type are linked to each-other as parent and child. By using data distribution, you can prevent data
                                  from being retrieved more than once, and also make sure that the data in your master and child are the same. In a Protocol, these data distribution Parameters can be defined in either
                                  a fixed or a dynamic way.<br />
                                  To use data distribution, you have to add the "distribution" attribute to a Parameter in your master Element. This Parameter can be a "simple" Parameter,
                                  or a column Parameter from a table.<br />
                                  For more information about this attribute, see the Protocol Reference Guide.]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="id" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[If Type is "read bit" or "response", use this attribute to specify the ID of the Parameter to which to refer.]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="options" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[In this attribute, you can specify a number of options, separated by semi-colons (";").<br />
                                  For more information about this attribute, see the Protocol Reference Guide.]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="relativeTimers" type="EnumProtocolTypeRelativeTimers">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[In this attribute, you can specify "true" or "true with reset".<br />
                                  For more information about this attribute, see the Protocol Reference Guide.]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="times" type="xs:unsignedInt">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[If Type is "trailer", use this attribute to indicate how many times the trailer is allowed to occur before it is considered to be the trailer.]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="virtual" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[Use this attribute to narrow down the number of Elements and Parameters with which the Element can connect. You can specify multiple connection restraints,
                                  separated by a pipe character ("|").<br />
                                  A connection restraint has the following format (building blocks separated by ":")<br />
                                  -	keyword "source" or "destination",<br />
                                  -	optionally followed by one or more Protocol definitions ("Protocol=...") and one or more Parameter descriptions ("Parameterdescription=...").]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ArrayOptions" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, you can define all table columns.<br />
                          Each table column is defined by one or two Parameters:<br />
                          -	one for read, and/or<br />
                          -	one for write.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ColumnOption" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[This tag allows you to define a table column.<br />
                                Each table column is defined by one or two Parameters:<br />
                                -	one for read, and/or<br />
                                -	one for write.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="idx" type="xs:unsignedInt">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[Defines the (0-based) position of the column in the table.<br />
                                    Note: The Protocol.Params.Param.Type.ArrayOptions.ColumnOption tags have to be defined in order of their idx attribute.]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="options" type="xs:string">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[In this attribute, you can specify a number of options.<br />
                                    For more information about this attribute, see the Protocol Reference Guide.<br />
                                    Note: In this attribute, you can specify multiple values separated by a character of choice (a semi-colon is recommended). This character has to be the first character in the value
                                    of the options attribute. If, for example, you want to separate the different options by a semi-colon, the first character of the options value has to be a semi-colon.]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="pid" type="TypeParamId">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[The Parameter ID of the column data.]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="type" type="EnumColumnOptionType">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[For more information on the values allowed in this attribute, see the Protocol Reference Guide.]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="value" type="xs:string">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[The interpretation of this value attribute depends on the value of the type attribute:<br />
                                    -	If type is "concatenation", then value is the enumeration of the columns to be concatenated.<br />
                                    -	If type is "autoincrement", then value is the offset for the automatic increment of the indexes.]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="displayColumn" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[Defines which column is used as an identifier for the user.<br />
                              This column can be updated, and normally contains a readable key which identifies the row for the user.]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="index" type="xs:string" use="required">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[Defines which column is used as primary column.<br />
                              The index column has to be of type "string". Once a row is created, the value of this index column cannot be changed.]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="options" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[In this attribute, you can specify a number of options.<br />
                              For more information about this attribute, see the Protocol Reference Guide.<br />
                              Note: In this attribute, you can specify multiple values separated by a character of choice (a semi-colon is recommended). This character has to be the first character in the value
                              of the options attribute. If, for example, you want to separate the different options by a semi-colon, the first character of the options value has to be a semi-colon.]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="partial" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[If you set this attribuate to "true", the table will be subdivided into multiple pages (default: 1000 rows per page). A page navigator will be displayed at the bottom of the table.<br />
                              To manually set the number of rows per page, type a colon (":") after "true", followed by the number of rows per page. This value has to be a value between 10 and 5000.]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="snmpIndex" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[Defines the columns that are used when you retrieve the table using SNMP. If you want a concatenation of multiple columns, you can separate them with semicolons (";").]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                      <xs:unique name="UniqueColumnOptionIdx">
                          <xs:selector xpath="dis:ColumnOption"/>
                          <xs:field xpath="@idx"/>
                      </xs:unique>   
                    </xs:element>
                  </xs:all>
                  <xs:attribute name="backup" type="EnumTrueFalse">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[Whether or not the Parameter has to be added to the backup script of the Element.<br />
                        Default: false]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="duplicateAs" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="export" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="historySet" type="EnumTrueFalse">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[This attribute allows you to specify that a parameter is a history set parameter.<br />
                                If you mark a parameter as a history set parameter, its last set value won’t be stored in the trending database when the element is restarted.]]>
                            </xs:documentation>
                        </xs:annotation>
                  </xs:attribute> 
                  <xs:attribute name="id" type="TypeParamId" use="required">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[The ID of the Parameter.<br />
                        -	Normal Protocols: range 1-64000<br />
                        -	Spectrum analyzers: range 1-50000<br />
                        WARNING: Never change Parameter IDs in existing Protocols. This would severely affect Alarms, trend displays, MS Visio files, etc. !!!]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="level" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[The security level of the Parameter.<br />
                        All users of whom the security level is above the one specified in this attribute are able to change (i.e. set) the value of the Parameter.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="options" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[Possible values:<br />
                        -	snmpSet: When the Parameter value changes, an SNMP Set command is performed.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="save" type="EnumTrueFalse">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[Whether or not the Parameter has to be saved each time its value changes:<br />
                        Default: false]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="setter" type="EnumTrueFalse">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[Whether or not the value of the write Parameter will be copied to the corresponding read Parameter (without the need to add a trigger or an action).<br />
                        Default: false]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="template" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="trending" type="EnumTrueFalse">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[Whether or not the Parameter can be trended:<br />
                        Default: true]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="loadSequence" type="xs:string" />
          </xs:complexType>
          <xs:unique name="UniqueParamId">
            <xs:selector xpath="dis:Param"/>
            <xs:field xpath="@id"/>
          </xs:unique>
        </xs:element>
        <xs:element name="Ports" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[For every Protocol, you have to specify its type in the Protocol.Type tag, and its port settings in the Protocol.Portsettings tag.<br />
              In case of a multiple-type Protocol, the advanced attribute of the Protocol.Type tag is used to any additional Protocol types. The port settings for those additional Protocol types then have to be
              specified in a Protocol.Ports.Portsettings tag (in which the name attribute contains the name of the additional type as specified in the advanced attribute of the Protocol.Type tag).]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PortSettings" minOccurs="0" maxOccurs="unbounded" type="PortSettings">
                <xs:annotation>
                  <xs:documentation>
                    <![CDATA[In this tag, you can specify the port settings for any additional Protocol type specified in the Protocol.Type tag.]]>
                  </xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PortSettings" minOccurs="0" type="PortSettings">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[In a Protocol.Portsettings tag, you can define the default port settings of a device port. It also allows you to restrict the capabilities of a device port, and to define the format and range
              of the bus address, if any.]]>
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="QActions" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag contains all QActions of the Protocol.<br />
              A QAction (i.e. Quick Action) is a script that can be executed when a Parameter or a row changes. Inside a QAction, the following scripting languages can be used:<br />
              -	Jscript<br />
              -	VBScript<br />
              -	CSharp]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="QAction" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    <![CDATA[A QAction is a script that can be executed when a Parameter or a row has changed.<br />
                    The actual script code of a QAction must be placed inside a CDATA section.<br />
                    By placing code inside a CDATA section, characters like "<" and "&", which are normally illegal when placed inside normal XML tags, will no longer be considered as such.<br />
                    In order to interact with SLProtocol (e.g. to access Parameters or to notify DataMiner of certain events)<br />
                    - in Jscript or VBScript code, use the SLScript object<br />
                    - in C# code, use the Skyline.DataMiner.Scripting namespace<br />
                    For information on how to use C# in Protocols, see the appendices of the Protocol Reference Guide.]]>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="dllImport" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            <![CDATA[The names of external DLL files used by the QAction.<br />
                            Multiple values have to be separated by semi-colons (";").<br />
                            System DLL files must be stored in the system dll directory; all other DLL files must be stored in the C:\Skyline DataMiner\ProtocolScripts directory.<br />
                            Note: The following DLL files don't have to be specified in this dllImport attribute. They are loaded by default.<br />
                            -	System.dll<br />
                            -	SLManagedScripting.dll<br />
                            -	Interop.sldms.dll]]>
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="encoding" type="EnumQActionEncoding">
                        <xs:annotation>
                          <xs:documentation>
                            <![CDATA[The language in which the script has been written:<br />
                            -	Jscript<br />
                            -	VBScript<br />
                            -	CSharp<br />
                            (case insensitive)]]>
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="id" use="required" type="xs:unsignedInt">
                        <xs:annotation>
                          <xs:documentation>
                            <![CDATA[The (unique) QAction ID.]]>
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="include" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            <![CDATA[The name of an external script to be executed.]]>
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="inputParameters" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            <![CDATA[The IDs of the Parameters that will be passed to functions inside the QAction script.<br />
                            Multiple values have to be separated by semi-colons (";").]]>
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="name" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            <![CDATA[In this tag, specify the name of the QAction.]]>
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="options" type="EnumQActionOptions">
                        <xs:annotation>
                          <xs:documentation>
                            <![CDATA[Possible values:<br />
                            - Queued: The QAction will be executed asynchronously. This implies that the QAction is triggered and set in the background. Be careful when using this option and make sure to also implement
                            Locking when this QAction is called more than once.<br />
                            - Group: When this option is specified, the "OldRow()" function will return the values retrieved by that group. This option can be used in case of high-volume polling. Use it with care!]]>
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="row" type="EnumTrueFalse">
                        <xs:annotation>
                          <xs:documentation>
                            <![CDATA[If "true", the QAction will be executed when a row of a (dynamic) table has changed.]]>
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="template" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            <![CDATA[*** No documentation available yet ***]]>
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="triggers" type="xs:string">
                        <xs:annotation>
                          <xs:documentation>
                            <![CDATA[The IDs of the Parameters that will cause the QAction to be executed each time their value changes.<br />
                            Multiple values have to be separated by semi-colons (";").]]>
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
          <xs:unique name="UniqueQActionId">
            <xs:selector xpath="dis:QAction"/>
            <xs:field xpath="@id"/>
          </xs:unique>
        </xs:element>
        <xs:element name="RCA" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[*** No documentation available yet ***]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:all>
              <xs:element name="Protocol" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Link" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="distribute" type="xs:string" />
                        <xs:attribute name="path" type="xs:string" />
                        <xs:attribute name="valueFilter" type="xs:string" />
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:all>
          </xs:complexType>
        </xs:element>
        <xs:element name="Relations" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Relation" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:attribute name="options" type="xs:string" />
                  <xs:attribute name="path" type="xs:string" />
                  <xs:attribute name="name" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[In this tag, specify the name of the Relation.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Responses" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag contains all responses of the Protocol.]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Response" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    <![CDATA[This tag allows you to specify the response that DataMiner can expect after having sent a specific command to the device.<br />
                    Similar to a command, a response is a collection of Parameters that describe the message that the device is expected to send back to DataMiner after having received a command.<br />
                    When it receives a response from the device, DataMiner will compare that response to the response definition specified in the Protocol.Responses.Response tag. If the response doesn't match
                    the definition, DataMiner will send the command again. In the device's Element Display, a red block will indicate that an error has occurred. The log files of the device will contain
                    more detailed information. If the response still doesn't match, DataMiner will send the command for the third and last time. If, at that point, no valid response has been received, DataMiner
                    will skip the command, and move to the next one.<br />
                    Note: By default, the number of retries in case of an invalid response is set to 3. This setting can be changed when adding or editing the device in System Display.]]>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:all>
                    <xs:element name="Content">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, specify the consecutive Parameters which, together, form the response that is expected from the device.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Param" minOccurs="0" maxOccurs="unbounded" type="TypeParamId">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, specify the ID of the Parameter that you want to include in the response.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="optional" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[Parameters included in a response definition can be marked as optional. This means, that no error will occur if they aren't found in the response received from the device.<br />
                              If a Parameter matches, DataMiner will simply go on to the next Parameter and check that one.<br />
                              If an optional Parameter doesn't match, the following special characters can be included in the "optional" attribute of the Protocol.Responses.Response tag to tell DataMiner what to do:<br />
                              +: tells DataMiner to skip the next Parameter. Multiple "+" characters can be entered to have several Parameters skipped.<br />
                              *: tells DataMiner to skip the Parameters in the response until it reaches the next optional Parameter.]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Description" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, you can enter some text that describes the response.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="Name" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag has to contain the name of the response. Often, the response will have the same name as the command with which it is associated.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                  </xs:all>
                  <xs:attribute name="id" use="required" type="xs:unsignedInt">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[The (unique) response ID.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="options" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[Possible values:<br />
                        - Connection: This option allows you to specify the ID of the connection (in case of multiple ports). Adding the connection ID at response level is only done in Protocols of type "smart serial".]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
          <xs:unique name="UniqueResponseId">
            <xs:selector xpath="dis:Response"/>
            <xs:field xpath="@id"/>
          </xs:unique>
        </xs:element>
        <xs:element name="SeverityBubbleUp" minOccurs="0">
            <xs:annotation>
                  <xs:documentation>
                      <![CDATA[*** No documentation available yet ***]]>
                  </xs:documentation>
            </xs:annotation>
            <xs:complexType>
                <xs:sequence>
                    <xs:element name="Path" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
        </xs:element>
        <xs:element name="SNMP" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag determines how the MIB file for the Protocol will be created.]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base="EnumSNMP">
                <xs:attribute name="includepages" type="EnumTrueFalse">
                  <xs:annotation>
                    <xs:documentation>
                      <![CDATA[If "true", the MIB of the Protocol will contain several submaps: one for each page defined in the Protocol.<br />
                      Example: When a number of Parameters are placed on a page called "General", the MIB will automatically create a submap named "General", which will contain all the Parameters on that page.]]>
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:extension>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
        <xs:element name="Timers" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag contains all timers of the Protocol.<br />
              Timers are used to configure recurring events (group execution, device polling, ...). Basically, a timer defines the interval between two consecutive executions of a given event.<br />
              By default, the interval specified in a timer is a fixed interval. However, in the Protocol, you can make the interval dynamic.<br />
              The interval can be modified by changing the value of the [Timer base] Parameter (ID: 65017). The value of this Parameter is the factor by which the interval time is multiplied.
              So "1" means the original interval, "2" means twice as slow, "0.5" means twice as fast, etc..]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Timer" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    <![CDATA[In this tag, you can specify which groups have to be executed, and when.<br />
                    It is recommended to define multiple timers. That way, you can separate the important groups (which will be polled more frequently) from the less important groups
                    (which will be polled less frequently).]]>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:all>
                    <xs:element name="Name" minOccurs="0" type="xs:string" />
                    <xs:element name="Content">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag contains all groups that have to be executed when the timer is triggered.<br />
                          Important: Do not include too much groups in one timer.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Group" minOccurs="0" maxOccurs="unbounded" type="xs:unsignedInt">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, specify the ID of the group to be executed.]]>
                              </xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Interval" type="xs:unsignedInt">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, you can specify the interval (in milliseconds) between consecutive group executions.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="SlowTime" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[*** Not implemented ***]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="Time">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag allows you to specify how frequently the included groups will be executed.<br />
                          If you enter "loop", the included groups will be executed over and over again.<br />
                          If you enter an integer value > 0, the included groups will be executed every X milliseconds.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute name="dataDisplay" type="xs:unsignedInt">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[In this attribute, specify the execution frequency of the included groups when a Data Display has been opened.<br />
                                  Note that if you set this attribute to "loop", the included groups will be executed as frequently as possible.
                                  In some cases, that could affect overall DataMiner performance.]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="initial" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[Specifies whether or not the timer should be started when the Element is started.<br />
                                  - true: the timer will be started when the Element is started.<br />
                                  - false: the timer will not be started when the Element is started. This allows you to dynamically start the timer by performing an action.<br />
                                  - random=startvalue:endvalue : the timer will be started a random number of seconds after the start of the Element. The random value will be a value between startvalue and endvalue.
                                  E.g. random=0:300<br />
                                  By default, this attribute is omitted. As a consequence, the groups will be executed the moment the Element is started.]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="options" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[In this attribute, you can specify a number of options, separated by semi-colons.<br />
                                  For more information, see the Protocol Reference Guide.]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:all>
                  <xs:attribute name="id" type="xs:unsignedInt">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="fixedTimer" type="EnumTrueFalse">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[If, in case of a relative-timer Protocol, this attribute is set to "true", the user will not be able to change the interval.<br />
                        See also: The relativeTimers attribute of the Protocol.Type tag.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="options" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="template" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
          <xs:unique name="UniqueTimerId">
            <xs:selector xpath="dis:Timer"/>
            <xs:field xpath="@id"/>
          </xs:unique>
        </xs:element>
        <xs:element name="Topology" minOccurs="0" type="Topology">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[*** No documentation available yet ***]]>
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Topologies" minOccurs="0">
            <xs:annotation>
                <xs:documentation>
                    <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
            </xs:annotation>
            <xs:complexType>
                <xs:sequence>
                    <xs:element name="Topology" minOccurs="0" maxOccurs="unbounded" type="Topology">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>                  
                </xs:sequence>
            </xs:complexType>
        </xs:element> 
        <xs:element name="TreeControls" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[*** No documentation available yet ***]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TreeControl" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    <![CDATA[*** No documentation available yet ***]]>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:all>
                    <xs:element name="ExtraTabs" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[*** No documentation available yet ***]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Tab" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="tableId" type="TypeParamId">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[*** No documentation available yet ***]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="title" type="xs:string">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[*** No documentation available yet ***]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="type" type="xs:string">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[*** No documentation available yet ***]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="parameter" type="xs:string">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[*** No documentation available yet ***]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ExtraDetails" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[*** No documentation available yet ***]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="LinkedDetails" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="discreetColumnId" type="TypeParamId">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[*** No documentation available yet ***]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="value" type="xs:string">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[*** No documentation available yet ***]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="detailsTableId" type="TypeParamId">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[*** No documentation available yet ***]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="HiddenColumns" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[*** No documentation available yet ***]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="Hierarchy" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[*** No documentation available yet ***]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Table" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="id" type="xs:unsignedInt">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[*** No documentation available yet ***]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="parent" type="xs:unsignedInt">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[*** No documentation available yet ***]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                              <xs:attribute name="condition" type="xs:string">
                                <xs:annotation>
                                  <xs:documentation>
                                    <![CDATA[*** No documentation available yet ***]]>
                                  </xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="path" type="xs:string">
                          <xs:annotation>
                            <xs:documentation>
                              <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ReadonlyColumns" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[*** No documentation available yet ***]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="OverrideDisplayColumns" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[*** No documentation available yet ***]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="OverrideIconColumns" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[*** No documentation available yet ***]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                  </xs:all>
                  <xs:attribute name="parameterId" type="TypeParamId">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="readOnly" type="EnumTrueFalse">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Triggers" minOccurs="0">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag contains all triggers of the Protocol.<br />
              In a trigger, you define when it should go off, and which actions it should execute.]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Trigger" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>
                    <![CDATA[In this tag, you can define a trigger.<br />
                    Triggers allow you to define the exact moment at which certain actions have to be executed. They can, for example, be used to set the exact time at which to perform a copy operation,
                    to calculate a CRC, etc..]]>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:all>
                    <xs:element name="Condition" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag allows you to specify a condition for a trigger (in a CDATA tag).<br />
                          Important: Always put a space between two consecutive brackets.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="Content">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, specify the actions to be executed, or triggers to be activated the moment the trigger goes off.<br />
                          Recommendation: Do not include more than 10 Id tags in one Protocol.Triggers.Trigger.Content tag.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Id" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>
                                <![CDATA[In this tag, specify the ID of the action to be executed or the trigger to be activated when the trigger goes off.]]>
                              </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:unsignedInt">
                                  <xs:attribute name="else" type="EnumTrueFalse">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[*** No documentation available yet ***]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="next" type="xs:unsignedInt">
                                    <xs:annotation>
                                      <xs:documentation>
                                        <![CDATA[The number of milliseconds between this action and the next.]]>
                                      </xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Name" minOccurs="0" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this optional tag, you can specify the name of the trigger.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="On" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, you define what will set off the trigger. It is used together with the Protocol.Triggers.Trigger.Time tag, in which you define the exact moment at which
                          the trigger has to go off.<br />
                          This Protocol.Triggers.Trigger.On tag is always used when defining a trigger, except when the trigger has to be activated by another trigger. In that case, the moment at which the
                          trigger has to go off will already be defined in the initializing trigger. The Protocol.Triggers.Trigger.Time tag will then also be empty.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="EnumTriggerOn">
                            <xs:attribute name="id" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[The ID of the Parameter, command, response, ...<br />
                                  If you don't specify an id attribute, the trigger will apply to all items of the type specified in the Protocol.Triggers.Trigger.On tag.]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Time" minOccurs="0" default="change">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[This tag, together with the Protocol.Triggers.Trigger.On tag, defines the exact moment at which a trigger will go off.<br />
                          Note: Not all Protocol.Triggers.Trigger.Time values can be used in combination with the different Protocol.Triggers.Trigger.On types.
                          See the Protocol Reference Guide for an overview of the possible combinations.]]>
                        </xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="EnumTriggerTime">
                            <xs:attribute name="case" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[The condition operator: equal, not equal, greater, less, or a logical combination of those operators.]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="id" type="xs:unsignedInt">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[The ID of the Parameter, command, response, ... (defined in the Protocol.Triggers.Trigger.On tag) of which the value will be checked.<br />
                                  If this attribute is omitted, the ID specified in the Protocol.Triggers.Trigger.On tag will be taken.]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="nr" type="EnumTrueFalse">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[Set this attribute to "true" if the value attribute contains a Parameter ID instead of a Parameter value.]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="value" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>
                                  <![CDATA[The value that will be used as condition operand.]]>
                                </xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Type" type="EnumTriggerType">
                      <xs:annotation>
                        <xs:documentation>
                          <![CDATA[In this tag, specify what should happen when the trigger goes off:<br />
                          - execute one or more actions, or<br />
                          - activate one or more triggers.]]>
                        </xs:documentation>
                      </xs:annotation>
                    </xs:element>
                  </xs:all>
                  <xs:attribute name="id" use="required" type="xs:unsignedInt">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[The (unique) ID of the trigger.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="template" type="xs:string">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
          <xs:unique name="UniqueTriggerId">
            <xs:selector xpath="dis:Trigger"/>
            <xs:field xpath="@id"/>
          </xs:unique>
        </xs:element>
        <xs:element name="Type">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag is used to define the type of the Protocol.]]>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base="EnumProtocolType">
                <xs:attribute name="advanced" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      <![CDATA[In this attribute, you can define other Protocol types. This allows you to create e.g. a serial Protocol containing some SNMP commands, or a Protocol that is capable of communicating
                      with multiple ports.<br />
                      Protocol types have to be separated by semi-colon (";").<br />
                      For more information on ports, see:	Protocol.Ports and Protocol.Portsettings]]>
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="communicationOptions" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      <![CDATA[This attribute can have a number of values. For more information, see the Protocol Reference Guide.]]>
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="databaseOptions" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      <![CDATA[*** No documentation available yet ***]]>
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="options" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>
                      <![CDATA[This attribute can have the following values:<br />
                      - unicode: Specify this option if the Protocol is a Unicode Protocol. Protocols of this type support Unicode languages like Chinese, Arabic, etc..<br />
                      Note: If you turn an existing Protocol driver of type "ascii" into a Protocol driver of type "unicode", then all existing data will be lost.]]>
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="overrideTimeoutDVE" type="EnumTrueFalse">
                      <xs:annotation>
                          <xs:documentation>
                              <![CDATA[*** No documentation available yet ***]]>
                          </xs:documentation>
                      </xs:annotation>
                  </xs:attribute>
                <xs:attribute name="relativeTimers" type="EnumProtocolTypeRelativeTimers">
                  <xs:annotation>
                    <xs:documentation>
                      <![CDATA[This attribute can have one of two values:	"true"* and	"true with reset".<br />
                      *If the fixedTimer attribute of the Protocol.Timers.Timer tag is also set to "true", then users cannot change the timer interval.]]>
                    </xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:extension>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
        <xs:element name="Vendor" type="xs:string">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag has to contain the name of the vendor of the monitored device.]]>
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="VendorOID" type="xs:string">
              <xs:annotation>
                  <xs:documentation>
                      <![CDATA[This tag has to contain the vendor OID of the monitored device.<br />
              This OID, to be provided either by the vendor of the device or (on request) by Skyline, must be unique, as it is used to define MIB objects for all Elements using the Protocol.
              Typically, the vendor OID will start with the prefix 1.3.6.1.4.1, which identifies private enterprises.]]>
                  </xs:documentation>
              </xs:annotation>
        </xs:element>
        <xs:element name="Version" type="xs:string">
          <xs:annotation>
            <xs:documentation>
              <![CDATA[This tag has to contain the version of the Protocol.<br />
              Within one DMS, you can maintain different versions of the same Protocol and assign them to different Elements. If you have to make modifications to a Protocol, don't create a completely new Protocol.
              Instead, make a new version of that same Protocol.<br />
              Version can be a number (e.g. 1.0.0.3) or a string (e.g. "high power").<br />
              Tip: When you have two types of Elements that are very similar (e.g. an optical transmitter: one with a high output power and another with a low output power), you can use the same Protocol and create two
              versions (e.g. version "high power" and version "low power" for the Protocol "optical transmitter". The only difference between the two versions would then be
              e.g. the range settings for the "output power" Parameter).]]>
            </xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:all>
    </xs:complexType>
  </xs:element>

  <!-- Custom Datatypes: enums -->

  <xs:simpleType name="EnumActionOn">
    <xs:restriction base="xs:string">
      <xs:enumeration value="action"/>
      <xs:enumeration value="command"/>
      <xs:enumeration value="group"/>
      <xs:enumeration value="pair"/>
      <xs:enumeration value="parameter"/>
      <xs:enumeration value="protocol"/>
      <xs:enumeration value="response"/>
      <xs:enumeration value="timer"/>
      <xs:enumeration value="trigger"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumActionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="add to execute"/>
      <xs:enumeration value="aggregate"/>
      <xs:enumeration value="append"/>
      <xs:enumeration value="append data"/>
      <xs:enumeration value="change length"/>
      <xs:enumeration value="clear"/>
      <xs:enumeration value="clear length info"/>
      <xs:enumeration value="clear on display"/>
      <xs:enumeration value="close"/>
      <xs:enumeration value="copy"/>
      <xs:enumeration value="copy reverse"/>
      <xs:enumeration value="crc"/>
      <xs:enumeration value="create element"/>
      <xs:enumeration value="execute"/>
      <xs:enumeration value="execute next"/>
      <xs:enumeration value="execute one"/>
      <xs:enumeration value="force execute"/>
      <xs:enumeration value="go"/>
      <xs:enumeration value="increment"/>
      <xs:enumeration value="length"/>
      <xs:enumeration value="lock"/>
      <xs:enumeration value="make"/>
      <xs:enumeration value="merge"/>
      <xs:enumeration value="multiply"/>
      <xs:enumeration value="normalize"/>
      <xs:enumeration value="open"/>
      <xs:enumeration value="power"/>
      <xs:enumeration value="priority lock"/>
      <xs:enumeration value="priority unlock"/>
      <xs:enumeration value="read"/>
      <xs:enumeration value="read file"/>
      <xs:enumeration value="read stuffing"/>
      <xs:enumeration value="replace"/>
      <xs:enumeration value="replace data"/>
      <xs:enumeration value="restart timer"/>
      <xs:enumeration value="reverse"/>
      <xs:enumeration value="run actions"/>
      <xs:enumeration value="save"/>
      <xs:enumeration value="set"/>
      <xs:enumeration value="set and get with wait"/>
      <xs:enumeration value="set info"/>
      <xs:enumeration value="set next"/>
      <xs:enumeration value="set with wait"/>
      <xs:enumeration value="sleep"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stop"/>
      <xs:enumeration value="stop current group"/>
      <xs:enumeration value="stuffing"/>
      <xs:enumeration value="swap column"/>
      <xs:enumeration value="timeout"/>
      <xs:enumeration value="unlock"/>
      <xs:enumeration value="wmi"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumChainsFilters">
    <xs:restriction base="xs:string">
      <xs:enumeration value="horizontal">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="vertical">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumColumnOptionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="autoincrement" />
      <xs:enumeration value="concatenation" />
      <xs:enumeration value="custom" />
      <xs:enumeration value="index" />
      <xs:enumeration value="retrieved" />
      <xs:enumeration value="snmp" />
      <xs:enumeration value="state" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumDatabasePartition">
    <xs:restriction base="xs:string">
      <xs:enumeration value="day" />
      <xs:enumeration value="hour"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumDiscreetValue">
    <xs:restriction base="xs:string">
      <xs:enumeration value="dll"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumDisplayType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="element manager">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[In System Display, the View menu will have an option called "CPE Manager Overview".]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="spectrum analyzer">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[An extra, fully functional "Spectrum Analyzer" page will be added to the Element.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumGroupContentType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="action"/>
      <xs:enumeration value="pair"/>
      <xs:enumeration value="param"/>
      <xs:enumeration value="trigger"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumGroupType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="action"/>
      <xs:enumeration value="poll"/>
      <xs:enumeration value="poll action"/>
      <xs:enumeration value="poll trigger"/>
      <xs:enumeration value="trigger"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumHttpLoginMethod">
        <xs:restriction base="xs:string">
            <xs:enumeration value="credentials"/>
            <xs:enumeration value="https"/>
        </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumHttpRequestVerb">
        <xs:restriction base="xs:string">
            <xs:enumeration value="GET"/>
            <xs:enumeration value="POST"/>
            <xs:enumeration value="PUT"/>
        </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumOIDType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="complete" />
      <xs:enumeration value="wildcard" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumOnOff">
    <xs:restriction base="xs:string">
      <xs:enumeration value="on" />
      <xs:enumeration value="off" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumParamCRCType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="2comp"/>
      <xs:enumeration value="crc"/>
      <xs:enumeration value="crc-ccitt"/>
      <xs:enumeration value="crc16"/>
      <xs:enumeration value="exor"/>
      <xs:enumeration value="fletcher"/>
      <xs:enumeration value="lsb after subtract"/>
      <xs:enumeration value="lsb after sum"/>
      <xs:enumeration value="modbus"/>
      <xs:enumeration value="rcds"/>
      <xs:enumeration value="rest"/>
      <xs:enumeration value="subtract"/>
      <xs:enumeration value="sum"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumParamInformationInclude">
    <xs:restriction base="xs:string">
      <xs:enumeration value="range"/>
      <xs:enumeration value="steps"/>
      <xs:enumeration value="time"/>
      <xs:enumeration value="units"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumParamInterpreteAlignment">
    <xs:restriction base="xs:string">
      <xs:enumeration value="left"/>
      <xs:enumeration value="right"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumParamInterpreteEndian">
    <xs:restriction base="xs:string">
      <xs:enumeration value="big">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The bytes will be inversed.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="little">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The bytes will not be inversed.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumParamInterpreteLengthType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="fixed"/>
      <xs:enumeration value="last next param"/>
      <xs:enumeration value="next param"/>
      <xs:enumeration value="other param"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumParamInterpreteRawType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="bcd"/>
      <xs:enumeration value="double"/>
      <xs:enumeration value="numeric text"/>
      <xs:enumeration value="only others"/>
      <xs:enumeration value="other"/>
      <xs:enumeration value="signed number"/>
      <xs:enumeration value="text"/>
      <xs:enumeration value="unsigned number"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumParamInterpreteType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="double">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The Parameter will be processed as a number.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="high nibble">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The Parameter will be processed as the high nibble (i.e. first four bits) of a byte.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="string">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The Parameter will be processed as an ASCII string.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumParametersViewType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="column"/>
      <xs:enumeration value="pie"/>
      <xs:enumeration value="row"/>
      <xs:enumeration value="stackedarea"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumParamMeasurementType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="analog" />
      <xs:enumeration value="button" />
      <xs:enumeration value="chart" />
      <xs:enumeration value="digital threshold" />
      <xs:enumeration value="discreet" />
      <xs:enumeration value="matrix" />
      <xs:enumeration value="number" />
      <xs:enumeration value="pagebutton" />
      <xs:enumeration value="progress" />
      <xs:enumeration value="string" />
      <xs:enumeration value="table" />
      <xs:enumeration value="title" />
      <xs:enumeration value="togglebutton" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumParamMeasurementTypeCase">
    <xs:restriction base="xs:string">
      <xs:enumeration value="lower">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Lower case]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="upper">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Upper case]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumParamType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="array" />
      <xs:enumeration value="bus" />
      <xs:enumeration value="crc" />
      <xs:enumeration value="dataminer info" />
      <xs:enumeration value="discreet info" />
      <xs:enumeration value="dummy" />
      <xs:enumeration value="elementdmaid" />
      <xs:enumeration value="elementid" />
      <xs:enumeration value="elementname" />
      <xs:enumeration value="fixed" />
      <xs:enumeration value="group" />
      <xs:enumeration value="header" />
      <xs:enumeration value="ip" />
      <xs:enumeration value="length" />
      <xs:enumeration value="pollingip" />
      <xs:enumeration value="read" />
      <xs:enumeration value="read bit" />
      <xs:enumeration value="response" />
      <xs:enumeration value="trailer" />
      <xs:enumeration value="write" />
      <xs:enumeration value="write bit" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumPortSettingsFlowControl">
    <xs:restriction base="xs:string">
      <xs:enumeration value="cts_rts"/>
      <xs:enumeration value="cts_dtr"/>
      <xs:enumeration value="dsr_rts"/>
      <xs:enumeration value="dsr_dtr"/>
      <xs:enumeration value="xon_xoff"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumPortSettingsParity">
    <xs:restriction base="xs:string">
      <xs:enumeration value="even"/>
      <xs:enumeration value="mark"/>
      <xs:enumeration value="no"/>
      <xs:enumeration value="odd"/>
      <xs:enumeration value="space"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumPortSettingsStopBits">
    <xs:restriction base="xs:decimal">
      <xs:enumeration value="1"/>
      <xs:enumeration value="1.5"/>
      <xs:enumeration value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumProtocolType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="gpib"/>
      <xs:enumeration value="http"/>  
      <xs:enumeration value="opc"/>
      <xs:enumeration value="serial"/>
      <xs:enumeration value="sla"/>
      <xs:enumeration value="smart-serial"/>
      <xs:enumeration value="snmp"/>
      <xs:enumeration value="snmpv2"/>
      <xs:enumeration value="snmpv3"/>
      <xs:enumeration value="virtual"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumProtocolTypeRelativeTimers">
    <xs:restriction base="xs:string">
      <xs:enumeration value="true"/>
      <xs:enumeration value="true with reset"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumQActionEncoding">
    <xs:restriction base="xs:string">
      <xs:enumeration value="jscript"/>
      <xs:enumeration value="vbscript"/>
      <xs:enumeration value="csharp"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumQActionOptions">
    <xs:restriction base="xs:string">
      <xs:enumeration value="binary"/>
      <xs:enumeration value="group"/>
      <xs:enumeration value="queued"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumSNMP">
    <xs:restriction base="xs:string">
      <xs:enumeration value="auto">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The MIB will assign an OID to each Parameter according to its number in the Protocol.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="false">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The MIB will not automatically create an OID for each Parameter.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="true">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[The MIB will automatically create an OID for each Parameter.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumSNMPType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="counter32"/>
      <xs:enumeration value="counter64"/>
      <xs:enumeration value="gauge32"/>
      <xs:enumeration value="integer"/>
      <xs:enumeration value="integer32"/>
      <xs:enumeration value="ipaddress"/>
      <xs:enumeration value="nsapaddress"/>
      <xs:enumeration value="null"/>
      <xs:enumeration value="objectid"/>
      <xs:enumeration value="octetstring"/>
      <xs:enumeration value="octetstringhex"/>
      <xs:enumeration value="octetstringascii"/>
      <xs:enumeration value="octetstringutf8"/>
      <xs:enumeration value="octetstringdecimal"/>
      <xs:enumeration value="oid"/>
      <xs:enumeration value="opaque"/>
      <xs:enumeration value="timeticks"/>
      <xs:enumeration value="uinteger32"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumTriggerOn">
    <xs:restriction base="xs:string">
      <xs:enumeration value="command"/>
      <xs:enumeration value="communication"/>
      <xs:enumeration value="element"/>
      <xs:enumeration value="group"/>
      <xs:enumeration value="pair"/>
      <xs:enumeration value="parameter"/>
      <xs:enumeration value="protocol"/>
      <xs:enumeration value="response"/>
      <xs:enumeration value="timer"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumTriggerTime">
    <xs:restriction base="xs:string">
      <xs:enumeration value="after"/>
      <xs:enumeration value="after create"/>
      <xs:enumeration value="after startup"/>
      <xs:enumeration value="before"/>
      <xs:enumeration value="change"/>
      <xs:enumeration value="change after response"/>
      <xs:enumeration value="link file change"/>
      <xs:enumeration value="succeeded"/>
      <xs:enumeration value="timeout"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumTriggerType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="action">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[When the trigger goes off, the action(s) specified in the Protocol.Triggers.Trigger.Content tag will be executed.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="trigger">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[When the trigger goes off, the trigger(s) specified in the Protocol.Triggers.Trigger.Content tag will be activated.]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumTrueFalse">
    <xs:restriction base="xs:string">
      <xs:enumeration value="true" />
      <xs:enumeration value="false" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumDisplayState">
    <xs:restriction base="xs:string">
      <xs:enumeration value="enabled" />
      <xs:enumeration value="disabled" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="EnumPortTypes">
        <xs:restriction base="xs:string">
            <xs:enumeration value="udp" />
            <xs:enumeration value="ip" />
            <xs:enumeration value="rs232" />
        </xs:restriction>
  </xs:simpleType>

    <xs:simpleType name="EnumIcons">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CAT">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Conditional Access Table]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DATA">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Data PID]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ECM">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Encrypted key for EMM]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EIT">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Event Information Table]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="EMM">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Encrypted Message]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GeneralPID">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[General PID]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GeneralService">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[General Service]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GeneralTransportStream">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[General Transport Stream]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GT">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[General Transport Stream]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MPEG2_AUDIO">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Audio PID]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MPEG2_VIDEO">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Video PID]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="NIT">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Network Information Table]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PAT">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Program Association Table]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PCR">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Program Clock Reference]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PMT">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Program Map Table]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RADIO">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Service of type Radio]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SDT">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Service Description Table]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SUBTITLE">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Subtitle PID]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TDT">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Time and Data Table]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TELETEXT">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Teletext PID]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="TV">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[Service of type Television]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="RST">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ATSC">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="GeneralInput">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MIP">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PD">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="PES">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="OBJECTCAROUSEL">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="APPLICATION">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SI">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DATACAROUSEL">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MPE">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ANALYZERCARDS">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <!-- Custom Datatypes: value restrictions -->

  <xs:simpleType name="TypeCamelCaseName">
    <xs:restriction base="xs:string">
      <xs:minLength value="2"/>
      <xs:maxLength value="160"/>
      <xs:pattern value="([A-Z]([a-z]*))*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TypeParamId">
    <xs:restriction base="xs:integer">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="64500"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Custom Datatypes: complexTypes  -->

  <xs:complexType name="Icon">
        <xs:attribute name="ref" type="EnumIcons">
                <xs:annotation>
                    <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
    </xs:complexType>  
    
  <xs:complexType name="PortSettings">
    <xs:all>
      <xs:element name="Baudrate" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[This tag allows you to limit the baud rate settings, and to define a default value. Typically, this information will correspond to the specifications received from the manufacturer.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag can be used to define a default baud rate. Each time a user adds an element using the element wizard, the baud rate will by default be set to this value.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the setting in question can be modified in the DataMiner user interface.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Range" minOccurs="0">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to define a range of possible baud rate settings.]]>
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:all minOccurs="0">
                  <xs:element name="From" type="xs:unsignedInt" default="0">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[In this tag, you can specify the first of a range of baud rates.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="To" type="xs:unsignedInt" default="0">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[In this tag, you can specify the last of a range of baud rates.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:element>
                </xs:all>
              </xs:complexType>
            </xs:element>
            <xs:element name="Value" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Using one or more Value tags, you can specify the different values that users are allowed to enter.<br />
                  Note:<br />
                  - The value specified in the DefaultValue tag doesn't have to be specified in a Value tag.<br />
                  - When no Value tags are specified, users will only be allowed to enter the value specified in the DefaultValue tag.<br />
                  The following wildcards can be used: * (a series of characters) and ? (one single character)]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="BusAddress" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[This tag allows you to limit the bus address settings, and to define a default value. Typically, this information will correspond to the specifications received from the manufacturer.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag can be used to define a default bus address value. Each time a user adds an element using the element wizard, the bus address will by default be set to this value.<br />
                  As a bus address is not always needed, the default value can also be set to "false". In that case, it will not be possible to specify a bus address.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the setting in question can be modified in the DataMiner user interface.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Range" minOccurs="0">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to define a range of possible bus addresses.]]>
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:all>
                  <xs:element name="From" type="xs:string" default="0">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[In this tag, you can specify the first of a range of bus addresses.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="To" type="xs:string" default="0">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[In this tag, you can specify the last of a range of bus addresses.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:element>
                </xs:all>
              </xs:complexType>
            </xs:element>
            <xs:element name="Value" minOccurs="0" maxOccurs="unbounded" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Using one or more Value tags, you can specify the different values that users are allowed to enter.<br />
                  Note:<br />
                  - The value specified in the DefaultValue tag doesn't have to be specified in a Value tag.<br />
                  - When no Value tags are specified, users will only be allowed to enter the value specified in the DefaultValue tag.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Databits" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[This tag allows you to specify the possible databits settings, and to define a default value.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag can be used to define a default databits value. Each time a user adds an element using the element wizard, the databits setting will by default be set to this value.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the setting in question can be modified in the DataMiner user interface.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Range" minOccurs="0">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to define a range of possible databits settings.]]>
                </xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:all>
                  <xs:element name="From" type="xs:unsignedInt">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[In this tag, you can specify the first of a range of databits settings.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="To" type="xs:unsignedInt">
                    <xs:annotation>
                      <xs:documentation>
                        <![CDATA[In this tag, you can specify the last of a range of databits settings.]]>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:element>
                </xs:all>
              </xs:complexType>
            </xs:element>
            <xs:element name="Value" minOccurs="0" type="xs:unsignedInt">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Using one or more Value tags, you can specify the different values that users are allowed to enter.<br />
                  Note:<br />
                  - The value specified in the DefaultValue tag doesn't have to be specified in a Value tag.<br />
                  - When no Value tags are specified, users will only be allowed to enter the value specified in the DefaultValue tag.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="Flowcontrol" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[This tag allows you to specify the possible flow control settings, and to define a default value.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag can be used to define a default flow control value. Each time a user adds an element using the Element wizard, the flowcontrol setting will by default be set to this value.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the setting in question can be modified in the DataMiner user interface.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Value" minOccurs="0" type="EnumPortSettingsFlowControl">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Using one or more Value tags, you can specify the different values that users are allowed to enter.<br />
                  Note:<br />
                  - The value specified in the DefaultValue tag doesn't have to be specified in a Value tag.<br />
                  - When no Value tags are specified, users will only be allowed to enter the value specified in the DefaultValue tag.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetCommunity" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the setting in question can be modified in the DataMiner user interface.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Value" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="IPport" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[In this tag, you can specify a default IP port.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[In this tag, you can specify whether or not the user will be able to change the IP port.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="LocalIPport" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[In this tag, you can specify a default local IP port.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[In this tag, you can specify whether or not the user will be able to change the local IP port.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="Parity" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[This tag allows you to specify the possible parity settings, and to define a default value.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag can be used to define a default parity. Each time a user adds an Element using the Element wizard, the parity will by default be set to this value.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the setting in question can be modified in the DataMiner user interface.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Value" minOccurs="0" type="EnumPortSettingsParity">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Using one or more Value tags, you can specify the different values that users are allowed to enter.<br />
                  Note:<br />
                  - The value specified in the DefaultValue tag doesn't have to be specified in a Value tag.<br />
                  - When no Value tags are specified, users will only be allowed to enter the value specified in the DefaultValue tag.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="PingInterval" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:unsignedInt">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the setting in question can be modified in the DataMiner user interface.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Value" minOccurs="0" type="xs:unsignedInt">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="PortTypeIP" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the user will be able to set the port type to 'TCP/IP'.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="PortTypeSerial" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the user will be able to set the port type to 'serial'.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="PortTypeUDP" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the user will be able to set the port type to 'UDP/IP'.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="Retries" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:unsignedInt">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the setting in question can be modified in the DataMiner user interface.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Value" minOccurs="0" type="xs:unsignedInt">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetCommunity" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the setting in question can be modified in the DataMiner user interface.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Value" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="SlowPoll" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the setting in question can be modified in the DataMiner user interface.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Value" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="SlowPollBase" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the setting in question can be modified in the DataMiner user interface.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Value" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="Stopbits" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[This tag allows you to specify the possible stopbits settings, and to define a default value.]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag can be used to define a default stopbits value. Each time a user adds an Element using the Element wizard, the stopbits setting will by default be set to this value.<br />
                  Set the default to one of the following integer values:	1, 1.5 or 2]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the setting in question can be modified in the DataMiner user interface.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Value" minOccurs="0" maxOccurs="unbounded" type="EnumPortSettingsStopBits">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[Using one or more Value tags, you can specify the different values that users are allowed to enter.<br />
                  Note:<br />
                  - The value specified in the DefaultValue tag doesn't have to be specified in a Value tag.<br />
                  - When no Value tags are specified, users will only be allowed to enter the value specified in the DefaultValue tag.<br />
                  Set Value to one of the following integer values: 1, 1.5 or 2]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="TimeoutTimeElement" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the setting in question can be modified in the DataMiner user interface.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Value" minOccurs="0" type="xs:string">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="TimeoutTime" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="xs:unsignedInt">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Disabled" minOccurs="0" type="EnumTrueFalse">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[This tag allows you to specify whether or not the setting in question can be modified in the DataMiner user interface.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Value" minOccurs="0" type="xs:unsignedInt">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="Type" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            <![CDATA[*** No documentation available yet ***]]>
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="DefaultValue" minOccurs="0" type="EnumPortTypes">
              <xs:annotation>
                <xs:documentation>
                  <![CDATA[In this tag, specify which port type should be preselected.]]>
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:all>
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="name" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <![CDATA[Name of the port to which the port settings apply<br />
          OR<br />
          The name of the additional Protocol type as specified in the advanced attribute of the Protocol.Type tag.]]>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="visibleInUi" type="EnumTrueFalse">
      <xs:annotation>
        <xs:documentation>
          <![CDATA[If you set this attribute to "false", users cannot see or change the port settings for this additional Protocol type when creating or editing an Element.]]>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
    
  <xs:complexType name="Topology">
      <xs:sequence>
            <xs:element name="Cell" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        <![CDATA[*** No documentation available yet ***]]>
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="Link" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>
                                    <![CDATA[*** No documentation available yet ***]]>
                                </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:attribute name="dest" type="xs:unsignedInt">
                                    <xs:annotation>
                                        <xs:documentation>
                                            <![CDATA[*** No documentation available yet ***]]>
                                        </xs:documentation>
                                    </xs:annotation>
                                </xs:attribute>
                                <xs:attribute name="source" type="xs:unsignedInt">
                                    <xs:annotation>
                                        <xs:documentation>
                                            <![CDATA[*** No documentation available yet ***]]>
                                        </xs:documentation>
                                    </xs:annotation>
                                </xs:attribute>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="detailColumns" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="listColumns" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="name" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="options" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="table" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>
                                <![CDATA[*** No documentation available yet ***]]>
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
      </xs:sequence>
      <xs:attribute name="name" type="xs:string">
          <xs:annotation>
              <xs:documentation>
                  <![CDATA[*** No documentation available yet ***]]>
              </xs:documentation>
          </xs:annotation>
      </xs:attribute>
    </xs:complexType>
        
</xs:schema>
